APPLICATION NOTE
Genomics  &  Informatics
Vol.  9(3)  134-135,  September  2011

http://dx.doi.org/10.5808/GI.2011.9.3.134
pISSN 1598-866X    eISSN 2234-0742

Implementation  of  a  Particle  Swarm  Optimization-based 
Classification  Algorithm  for  Analyzing  DNA  Chip  Data

Xiaoyue  Han  and  Minsoo  Lee*

Department  of  Computer  Science  and  Engineering,  Ewha 
Womans  University,  Seoul  120-750,  Korea

Abstract

DNA  chips  are  used  for  experiments  on  genes  and  pro-
vide  useful  information  that  could  be  further  analyzed. 
Using  the  data  extracted  from  the  DNA  chips  to  find 
useful  patterns  or  information  has  become  a  very  im-
portant  issue.  In  this  paper,  we  explain  the  application 
developed  for  classifying  DNA  chip  data  using  a  classi-
fication  method  based  on  the  Particle  Swarm  Optimiza-
tion  (PSO)  algorithm.  Considering  that  DNA  chip  data  is 
extremely  large  and  has  a  fuzzy  characteristic,  an  algo-
rithm  that  imitates  the  ecosystem  such  as  the  PSO  al-
gorithm  is  suitable  to  be  used  for  analyzing  such  data. 
The  application  enables  researchers  to  customize  the 
PSO  algorithm  parameters  and  see  detail  results  of  the 
classification  rules.

Availability:  The  codes  for  the  developed  algorithm  may 
be  obtained  from  the  author  under  consent  to  in-
tellectual  property  agreements.  The  code  is  a  demo  ver-
sion  and  thus  some  configuration  methods  are  done 
through  editing  configuration  files.  The  results  are  shown 
in  a  text  window  which  will  be  improved  in  the  future. 
Contact  mlee@ewha.ac.kr  if  you  are  interested  in  the 
demo  version  of  the  codes  for  possible  collaboration. 

Keywords:  classification,  DNA  chip  data

Introduction

Biological  science  is  being  revolutionized  by  the  avail-
ability  of  abundant  information  regarding  complete  ge-
nome  sequences  for  many  different  organisms. 
    DNA  chips  enable  at  least  thousands  to  millions  of 
the  DNA  to  be  placed  on  a  small  spaced  area. 
Biologists  can  experiment  with  genes  by  easily  using 
DNA  chips.  After  the  experiments,  an  analysis  process 
is  needed.  The  data  provided  by  the  DNA  chips  could 

*Corresponding  author:  E-mail  mlee@ehwa.ac.kr
Tel  +82-2-3277-3401,  Fax  +82-2-3277-2306
Accepted  4  June  2011

be  represented  as  a  two  dimensional  matrix,  in  which 
one  axis  represent  genes  and  the  other  represent 
samples.  The  analysis  process  makes  use  of  the  data 
extracted  from  the  DNA  chips  and  performs  various 
mining  operations  such  as  classification  to  find  mean-
ingful  patterns  in  the  data.
    The  classification  algorithms  for  DNA  chip  data  could 
benefit  from  using  algorithms  that  imitate  the  ecosys-
tem.  These  algorithms  are  adaptable  to  large  scale 
problems  using  probabilistic  search  mechanisms. 
Among  such  algorithms  the  Particle  Swarm  Optimization 
algorithm  (Falco  et al.,  2006)  has  recently  emerged  as 
an  interesting  candidate  for  dealing  with  biological  data. 
    In  this  paper  we  provide  a  simple  description  of  the 
application  developed  using  the  PSO  algorithm  to  clas-
sify  DNA  chip  data.  The  parameters  for  the  algorithm 
can  be  changed  for  various  experimental  data  and  the 
details  of  the  resulting  classification  rules  are  shown  by 
the  application.

Particle  Swarm  Optimization  Algorithm

PSO  is  a  recently  proposed  algorithm  by  James  Kenne-
dy  and  R.  C.  Eberhart  in  1995  motivated  by  social  be-
havior  of  organisms  such  as  bird  flocking  and  fish 
schooling.  The  PSO  algorithm  is  not  only  a  tool  for  opti-
mization,  but  also  a  tool  for  representing  socio-cognition 
of  human  and  artificial  agents,  based  on  principles  of 
social  psychology.  Some  scientists  suggest  that  knowl-
edge  is  optimized  by  social  interaction  and  thinking  is 
not  only  private  but  also  interpersonal. 
    The  PSO  algorithm  works  as  the  following  (Falco  et 
al.,  2007).  A  swarm  of  particles  is  created  at  the 
beginning.  Each  particle  has  a  position  and  velocity  val-
ue  in  a  multidimensional  space.  Each  position  is  as-
signed  a  value  based  on  an  objective  function  that 
guides  the  algorithm.  Particles  in  the  swarm  exchange 
good  positions  among  themselves  and  adjust  their  own 
position  and  velocity  based  on  these  good  positions. 
Globally  best  positions  that  affect  all  particles  as  well  as 
locally  best  positions  which  affect  a  subset  of  neighbor-
ing  particles  are  remembered.  As  several  iterations  con-
tinue,  the  globally  best  position  is  updated  and  the  final 
result  gives  the  best  particle  position.

PSO-based  classification  system

The  PSO  algorithm  was  used  to  develop  the  DNA  chip 

PSO-based  Classification  for  DNA  Chips    135

Fig.  2.  Result  of  PSO-based  classification.

for  the  new  data  set.
    The  PSO-based  classification  system  is  implemented 
with  C.  Fig.  2  shows  the  results  of  the  classification 
rules  found.  The  number  of  iterations  can  be  customized 
by  the  user.  The  DNA  chip  data  used  was  the  AB  1700 
mouse  chip  (1-dye)  which  was  provided  from  Macrogen 
Inc.  and  was  composed  of  100  different  genes  and  24 
samples.  The  number  of  classes  is  2  and  each  class 
has  12  samples.

Discussion

The  PSO-based  classification  system  can  be  used  for 
DNA  chip  data  analysis.  Several  customization  options 
are  available  but  more  options  will  be  available  in  the 
future  to  customize  the  fitness  functions  and  particles  in 
some  other  applications.  Some  experiments  showed 
that  the  algorithm  usually  provides  rules  with  more  than 
90%  accuracy  and  less  than  70%  of  time  to  discover 
the  classification  rules  compared  to  other  traditional  ap-
proaches  such  as  decision  trees.  Future  work  will  vali-
date  the  performance  more  extensively  and  provide  a 
more  advanced  user  interface.

Acknowledgements

This  work  was  supported  by  Mid-career  Researcher 
Program  through  NRF  grant  funded  by  the  MEST  (No. 
2009-0083992). 

References

Falco, 

I.D.,  Cioppa,  A.D.,  and  Tarantino,  E. 

(2006). 
Evaluation  of  Particle  Swarm  Optimization  Effectiveness 
in  Classification.  Fuzzy  Logic  and  Applications  3849, 
164-171.

Falco,  I.D.,  Cioppa,  A.D.,  and  Tarantino,  E.  (2007).  Facing 
classification  problems  with  Particle  Swarm  Optimization. 
Appl. Soft. Comput.  7,  652-658.

Fig.  1.  PSO-based  classification  system.

data  classifying  system  shown  in  Fig.  1. 
    The  analysis  system  can  be  divided  into  two  phases. 
The  first  phase  is  creating  classification  rules  as  ex-
plained  above  and  the  second  phase  is  applying  the 
classification  rules  on  new  data  to  predict  the  class.  The 
first  phase  of  discovering  classification  rules  is  com-
posed  of  two  steps.  The  first  step  is  the  input  pre-proc-
essing  step  where  the  analysis  system  gets  data  from 
the  database  and  converts  it  into  an  appropriate  data 
format  so  that  it  can  be  used  in  the  analysis  system. 
The  second  step  is  the  training  step  using  the  PSO  al-
gorithm  to  create  classification  rules.  An  example  for  the 
training  data  is  shown  in  Fig.  1.  It  contains  the  sample 
ID,  probe  ID,  Expression  level,  and  class.  The  training 
data  and  test  data  are  divided  with  a  10-fold  cross  vali-
dation  mechanism.  The  particles  of  the  PSO  algorithm 
represent  rules  in  the  classification  system.  Each  particle 
includes  information  such  as  the  probe  number,  gene 
expression  value,  class,  local  accuracy  of  rule.  The  fit-
ness  of  a  particle  is  defined  as  the  accuracy  of  the  rule 
it  represents.  The  position  of  a  particle  is  updated  by 
calculating  the  difference  between  the  velocity  in  time  t 
and  tï¼‹1.  When  updating  the  position,  a  fitness  value  of 
each  rule  is  computed.  And  if  the  calculated  fitness  val-
ue  is  greater  than  the  global  fitness,  then  the  current  fit-
ness  replaces  the  global  fitness.  After  the  training  proc-
ess,  many  rules  are  produced  and  the  best  rules  would 
be  chosen  as  a  final  set  of  rules.  Then  the  rule  is  ap-
plied  to  the  test  data  and  from  the  predicted  class  re-
sults  we  can  compare  them  with  the  correct  answers 
provided  by  the  test  data  set  to  get  the  accuracy  of  the 
prediction.  The  second  phase  is  using  the  rules  dis-
covered  from  the  previous  step  to  predict  the  classes 

