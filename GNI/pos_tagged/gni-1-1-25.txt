A/DT
Heuristic/JJ
Algorithm/NN
to/TO
Find/VB
All/DT
Normalized/JJ
Local/JJ
Alignments/NNS
Above/JJ
Threshold/JJ
./.
====================
Local/JJ
alignment/NN
is/VBZ
an/DT
important/JJ
task/NN
in/IN
molecular/JJ
====================
biology/NN
to/TO
see/VB
if/IN
two/CD
sequences/NNS
contain/VBP
regions/NNS
that/IN
are/VBP
similar/JJ
./.
====================
The/DT
most/JJS
popular/JJ
approach/NN
to/TO
local/JJ
alignment/NN
is/VBZ
the/DT
use/NN
of/IN
dynamic/JJ
programming/VBG
due/JJ
to/TO
Smith/JJ
and/CC
Waterman/JJ
,/,
but/CC
the/DT
alignment/NN
reported/VBD
by/IN
the/DT
Smith-Waterman/JJ
algorithm/NN
has/VBZ
some/DT
undesirable/JJ
properties/NNS
./.
====================
The/DT
recent/JJ
approach/NN
to/TO
fix/JJ
these/DT
problems/NNS
is/VBZ
to/TO
use/VB
the/DT
notion/NN
of/IN
normalized/VBN
scores/VBZ
for/IN
local/JJ
alignments/NNS
by/IN
Arslan/NN
,/,
Egecioglu/NNP
and/CC
Pevzner/NN
./.
====================
In/IN
this/DT
paper/NN
we/PRP
consider/VBP
the/DT
problem/NN
of/IN
finding/NN
all/DT
local/JJ
alignments/NNS
whose/WP$
normalized/VBN
scores/VBZ
are/VBP
above/JJ
a/DT
given/VBN
threshold/NN
,/,
and/CC
present/JJ
a/DT
fast/JJ
heuristic/JJ
algo­/RB
rithm/NN
./.
====================
Our/PRP$
algorithm/NN
is/VBZ
180-330/CD
times/NNS
faster/JJR
than/IN
Arslan/NN
et/FW
al./FW
’/CD
s/NNS
for/IN
sequences/NNS
of/IN
length/NN
about/RB
120/CD
kbp/NN
and/CC
about/IN
40-50/CD
times/NNS
faster/JJR
for/IN
sequences/NNS
of/IN
length/NN
about/RB
30/CD
kbp/NN
./.
====================
Sequence/NN
alignment/NN
is/VBZ
a/DT
fundamental/JJ
task/NN
in/IN
molecular/JJ
====================
biology/NN
to/TO
see/VB
if/IN
two/CD
sequences/NNS
are/VBP
related/JJ
./.
====================
The/DT
local/JJ
alignment/NN
problem/NN
for/IN
two/CD
sequences/NNS
is/VBZ
to/TO
find/VB
a/DT
pair/NN
of/IN
similar/JJ
regions/NNS
,/,
one/CD
from/IN
each/DT
sequence/NN
./.
====================
In/IN
many/JJ
biological/JJ
applications/NNS
local/JJ
alignment/NN
is/VBZ
more/RBR
useful/JJ
than/IN
global/JJ
alignment/NN
because/IN
two/CD
sequences/NNS
may/MD
not/RB
be/VB
similar/JJ
as/IN
a/DT
whole/JJ
,/,
but/CC
they/PRP
can/MD
contain/VB
small/JJ
regions/NNS
that/IN
are/VBP
very/RB
similar/JJ
./.
====================
A/DT
most/JJS
popular/JJ
approach/NN
to/TO
local/JJ
alignment/NN
is/VBZ
the/DT
use/NN
of/IN
dynamic/JJ
programming/VBG
due/JJ
to/TO
Smith/JJ
and/CC
Waterman/JJ
(/(
Smith/NN
and/CC
Waterman/JJ
,/,
1981/CD
;/:
Waterman/NNP
et/FW
al./FW
,/,
1995/CD
)/)
./.
====================
The/DT
Smith-/JJ
Waterman/JJ
algorithm/NN
finds/NNS
a/DT
pair/NN
of/IN
regions/NNS
whose/WP$
alignment/NN
score/RB
is/VBZ
the/DT
highest/JJS
(/(
which/WDT
is/VBZ
called/VBN
the/DT
optimal/JJ
local/JJ
alignment/NN
)/)
./.
====================
However/RB
,/,
the/DT
alignment/NN
reported/VBD
by/IN
the/DT
Smith-Waterman/JJ
algorithm/NN
has/VBZ
some/DT
undesirable/JJ
properties/NNS
./.
====================
The/DT
alignment/NN
may/MD
include/VB
regions/NNS
whose/WP$
similarity/NN
is/VBZ
very/RB
poor/JJ
(/(
Arslan/NN
et/FW
al./FW
,/,
2001/CD
;/:
Zhang/NNP
et/FW
al./FW
,/,
1999/CD
)/)
./.
====================
Also/RB
,/,
the/DT
Smith-Waterman/JJ
algorithm/NN
does/VBZ
not/RB
consider/VB
the/DT
lengths/NNS
of/IN
local/JJ
alignments/NNS
in/IN
computing/VBG
scores/VBZ
,/,
and/CC
therefore/RB
a/DT
biologically/RB
important/JJ
but/CC
short/JJ
alignment/NN
may/MD
not/RB
be/VB
detected/VBN
(/(
Arslan/NN
and/CC
Pevzner/NN
et/FW
al./FW
,/,
2001/CD
)/)
./.
====================
There/EX
have/VBP
been/VBN
several/JJ
approaches/NNS
to/TO
fix/JJ
the/DT
problems/NNS
of/IN
the/DT
Smith-Waterman/JJ
algorithm/NN
(/(
Goad/JJ
and/CC
Kanehisa/NN
,/,
1982/CD
;/:
Sellers/NNS
,/,
1984/CD
;/:
Zhang/NNP
eta/./FW
,/,
1998/CD
;/:
Zhang/NNP
etal./FW
,/,
1999/CD
;/:
Arslan/NNP
and/CC
Pevzner/NN
et/FW
a/./FW
,/,
2001/CD
)/)
./.
====================
For/IN
example/NN
,/,
Zhang/NNP
et/FW
al/JJ
./.
====================
(/(
Zhang/NNP
et/FW
al./FW
,/,
1998/CD
;/:
Zhang/NNP
and/CC
Miller/NN
et/FW
a/./FW
,/,
1999/CD
)/)
proposed/VBN
an/DT
approach/NN
based/VBN
on/IN
the/DT
notion/NN
of/IN
X-/JJ
drop/NN
,/,
a/DT
region/NN
that/WDT
scores/VBZ
below/IN
-X/NN
for/IN
some/DT
fixed/JJ
X/NN
>/JJR
0/CD
./.
====================
They/PRP
consider/VBP
only/RB
alignments/NNS
that/DT
contain/VBP
no/DT
X-drop/JJ
./.
====================
A/DT
more/RBR
recent/JJ
approach/NN
to/TO
fix/JJ
the/DT
problems/NNS
is/VBZ
the/DT
use/NN
of/IN
normalized/VBN
scores/VBZ
for/IN
local/JJ
alignments/NNS
(/(
Marzal/JJ
and/CC
Vidal/JJ
1993/CD
;/:
Arslan/NNP
and/CC
6/CD
./.
====================
Egecioglu/NN
(/(
1999/CD
)/)
;/:
Arslan/NN
et/FW
a/./FW
,/,
2001/CD
)/)
./.
====================
Arslan/NN
eta//NN
./.
====================
(/(
2001/CD
)/)
used/VBN
fractional/JJ
programming/VBG
to/TO
obtain/VB
the/DT
optimal/JJ
normalized/VBN
local/JJ
alignment/NN
of/IN
two/CD
sequences/NNS
./.
====================
They/PRP
also/RB
extended/VBD
their/PRP$
solution/NN
to/TO
find/VB
all/DT
local/JJ
alignments/NNS
whose/WP$
normalized/VBN
scores/VBZ
are/VBP
larger/RBR
than/IN
a/DT
given/VBN
threshold/NN
by/IN
running/VBG
their/PRP$
solution/NN
repeatedly/RB
after/IN
masking/VBG
those/DT
alignments/NNS
that/DT
are/VBP
already/RB
found/VBN
./.
====================
In/IN
this/DT
paper/NN
we/PRP
consider/VBP
the/DT
problem/NN
of/IN
finding/NN
all/DT
local/JJ
alignments/NNS
whose/WP$
normalized/VBN
scores/VBZ
are/VBP
above/JJ
a/DT
given/VBN
threshold/NN
./.
====================
A/DT
local/JJ
alignment/NN
whose/WP$
normalized/VBN
score/RB
is/VBZ
above/JJ
a/DT
threshold/JJ
will/MD
be/VB
called/VBN
a/DT
TNL/NN
alignment/NN
./.
====================
Since/IN
small/JJ
regions/NNS
are/VBP
reported/VBN
in/IN
the/DT
local/JJ
alignment/NN
problem/NN
,/,
finding/VBG
all/DT
of/IN
TNL/NN
alignments/NNS
can/MD
be/VB
more/RBR
appropriate/JJ
than/IN
just/RB
finding/NN
a/DT
single/JJ
(/(
optimal/JJ
)/)
local/JJ
alignment/NN
in/IN
applications/NNS
such/JJ
as/IN
gene/NN
prediction/NN
(/(
Gusfield/JJ
,/,
1997/CD
)/)
./.
====================
We/PRP
present/VBP
a/DT
fast/JJ
algorithm/NN
for/IN
the/DT
problem/NN
of/IN
finding/NN
all/DT
the/DT
TNL/NN
====================
alignments/NNS
./.
====================
Our/PRP$
algorithm/NN
is/VBZ
based/VBN
on/IN
fractional/JJ
programming/VBG
and/CC
the/DT
banded/JJ
Smith-Waterman/JJ
algorithm/NN
./.
====================
The/DT
fractional/JJ
programming/VBG
approach/NN
uses/VBZ
the/DT
Smith-/JJ
Waterman/JJ
algorithm/NN
repeatedly/RB
to/TO
obtain/VB
one/CD
local/JJ
alignment/NN
./.
====================
Arslan/NN
et/FW
al/JJ
./.
====================
(/(
Arslan/NN
et/FW
al./FW
,/,
2001/CD
)/)
use/VBP
this/DT
solution/NN
repeatedly/RB
to/TO
find/VB
all/DT
the/DT
TNL/NN
alignments/NNS
./.
====================
Hence/RB
,/,
Arslan/NN
et/FW
al/JJ
./.
'/``
====================
s/NNS
algorithm/NN
makes/VBZ
a/DT
double/JJ
repetition/NN
of/IN
the/DT
Smith-Waterman/JJ
algorithm/NN
,/,
which/WDT
makes/VBZ
it/PRP
very/RB
slow/JJ
in/IN
practice/NN
./.
====================
Our/PRP$
algorithm/NN
first/JJ
makes/VBZ
a/DT
careful/JJ
selection/NN
of/IN
bands/NNS
based/VBN
on/IN
several/JJ
parameters/NNS
so/RB
that/IN
the/DT
selected/VBN
bands/NNS
can/MD
only/RB
contain/VBP
TNL/NN
alignments/NNS
with/IN
high/JJ
probability/NN
./.
====================
Then/RB
it/PRP
runs/VBZ
the/DT
Smith-Waterman/JJ
algorithm/NN
on/IN
the/DT
selected/VBN
bands/NNS
in/IN
such/JJ
a/DT
way/NN
that/DT
the/DT
number/NN
of/IN
applications/NNS
of/IN
the/DT
Smith-Waterman/JJ
algorithm/NN
on/IN
each/DT
band/NN
is/VBZ
much/RB
smaller/JJR
than/IN
that/DT
of/IN
Arslan/JJ
etal/JJ
./.
'/``
====================
s/NNS
./.
====================
Experiments/NNS
show/VBP
that/IN
our/PRP$
algorithm/NN
is/VBZ
about/RB
180-330/CD
times/NNS
faster/JJR
than/IN
Arslan/NN
et/FW
al/JJ
./.
'/``
====================
s/NNS
for/IN
the/DT
data/NNS
set/VBP
of/IN
human/JJ
chromosome/NN
X/NN
cosmids/NNS
Qc8D3/NN
(/(
GenBank/NN
Acc/NN
./.
====================
No/DT
./.
====================
AF030876/NN
(/(
113/CD
kbp/NN
)/)
)/)
and/CC
mouse/NN
chromosome/NN
X/NN
clone/NN
BAC/NN
B22804/NN
(/(
GenBank/NN
Acc/NN
./.
====================
No/DT
./.
====================
AF121351/NN
(/(
123/CD
kbp/NN
)/)
)/)
and/CC
it/PRP
is/VBZ
about/RB
40-50/CD
times/NNS
faster/JJR
for/IN
the/DT
data/NNS
set/VBP
of/IN
human/JJ
(/(
GenBank/NN
Acc/NN
./.
====================
No/DT
./.
====================
L10347/NN
(/(
31/CD
kbp/NN
)/)
)/)
and/CC
mouse/NN
(/(
GenBank/NN
Acc/NN
./.
====================
No/DT
./.
====================
M65161/NN
(/(
32.4/CD
kbp/NN
)/)
)/)
pro-alpha1/NN
type/NN
the/DT
benefit/NN
of/IN
II/CD
collagen/NN
,/,
while/IN
finding/NN
all/DT
TNL/NN
alignments/NNS
./.
====================
In/IN
addition/NN
to/TO
extremely/RB
fast/JJ
speed/RB
,/,
our/PRP$
algorithm/NN
can/MD
change/VB
the/DT
parameters/NNS
for/IN
selecting/VBG
bands/NNS
to/TO
adjust/VB
the/DT
time/NN
and/CC
accuracy/NN
of/IN
our/PRP$
algorithm/NN
./.
====================
A/DT
string/JJ
or/CC
a/DT
sequence/NN
is/VBZ
concatenations/NNS
of/IN
zero/CD
or/CC
more/RBR
characters/NNS
from/IN
an/DT
alphabet/NN
X/NN
./.
====================
A/DT
space/NN
is/VBZ
denoted/VBN
by/IN
J/NN
£/CD
2/CD
;/:
we/PRP
regard/VBP
J/NN
as/IN
a/DT
character/NN
for/IN
convenience/NN
./.
====================
The/DT
length/NN
of/IN
a/DT
string/JJ
a/DT
is/VBZ
denoted/VBN
by/IN
|a|/JJ
./.
====================
Let/NN
a/DT
,/,
denote/VBP
/th/NN
character/NN
of/IN
a/DT
string/JJ
a/DT
and/CC
a/DT
(/(
i/LS
,/,
j/RB
)/)
denote/VBP
a/DT
substring/JJ
aa+1/NN
■■■aj/NN
of/IN
a/DT
./.
====================
When/WRB
a/DT
sequence/NN
a/DT
is/VBZ
a/DT
substring/JJ
of/IN
a/DT
sequence/NN
====================
a/DT
,/,
we/PRP
denote/VBP
it/PRP
by/IN
«/CD
</JJR
a/DT
./.
====================
Given/IN
two/CD
strings/NNS
a=aici2/NN
--/:
-a/NN
,/,
,/,
and/CC
b=bib2/NN
--/:
bn/IN
,/,
an/DT
alignment/NN
of/IN
a/DT
and/CC
b/LS
is/VBZ
a*=a2*a2*/RB
--/:
a*/IN
and/CC
b*=hi*fe*-/IN
fo*/IN
constructed/VBN
by/IN
inserting/VBG
zero/CD
or/CC
more/RBR
J/NN
's/POS
into/IN
a/DT
and/CC
b/LS
so/RB
that/IN
each/DT
a*/IN
maps/VBZ
to/TO
fo*/VB
for/IN
1/CD
</JJR
//:
</JJR
I/CD
./.
====================
There/EX
are/VBP
three/CD
kinds/NNS
of/IN
mappings/NNS
in/IN
a*/DT
and/CC
b*/IN
according/VBG
to/TO
the/DT
characters/NNS
of/IN
and/CC
a*and/CC
b*/IN
./.
====================
■/CD
match/VBP
:/:
a*=bi*/DT
d/FW
,/,
====================
•/CD
mismatch/NN
:/:
(/(
a*/RB
=Ab/NN
,/,
*/DT
)/)
and/CC
(/(
a*/RB
bi*/NN
=/=/JJ
J/NN
)/)
,/,
====================
•/CD
insertion/NN
or/CC
deletion/NN
(/(
indel/NN
for/IN
short/JJ
)/)
:/:
either/CC
a*/DT
or/CC
b*/IN
is/VBZ
J/NN
./.
====================
Note/RB
that/DT
we/PRP
do/VBP
not/RB
allow/VB
the/DT
case/NN
of/IN
«/NN
*=/CD
&/CC
*=/CD
J/NN
./.
====================
If/IN
there/EX
exists/VBZ
an/DT
alignment/NN
of/IN
a/DT
and/CC
b/LS
whose/WP$
number/NN
of/IN
matches/NNS
,/,
mismatches/NNS
and/CC
indels/VBZ
are/VBP
x/CC
,/,
y/RB
and/CC
z/NN
,/,
respectively/RB
,/,
then/RB
we/PRP
call/RB
the/DT
triplet/NN
(/(
x/CC
,/,
y/RB
,/,
z/NN
)/)
an/DT
alignment/NN
vector/NN
of/IN
a/DT
and/CC
====================
b/LS
./.
====================
We/PRP
define/VBP
the/DT
alignment/NN
score/RB
of/IN
an/DT
alignment/NN
a*/IN
and/CC
b*/IN
with/IN
alignment/JJ
vector/NN
(/(
x/CC
,/,
y/RB
,/,
z/NN
)/)
by/IN
score/RB
(/(
x/CC
,/,
y/RB
,/,
z/NN
)/)
=x-8y/RB
~nz/NN
that/DT
is/VBZ
,/,
we/PRP
assume/VBP
that/DT
a/DT
match/JJ
score/RB
is/VBZ
1/CD
,/,
a/DT
mismatch/NN
====================
penalty/NN
is/VBZ
8/CD
and/CC
an/DT
indel/NN
penalty/NN
is/VBZ
y/RB
./.
====================
We/PRP
define/VBP
the/DT
similarity/NN
of/IN
two/CD
sequences/NNS
a/DT
and/CC
b/LS
,/,
denoted/VBN
by/IN
S/NN
(/(
a/DT
,/,
b/LS
)/)
,/,
to/TO
be/VB
the/DT
highest/JJS
alignment/NN
score/RB
of/IN
all/DT
possible/JJ
alignments/NNS
of/IN
a/DT
and/CC
b/LS
./.
====================
Given/IN
two/CD
sequences/NNS
a/DT
and/CC
b/LS
,/,
a/DT
local/JJ
alignment/NN
of/IN
a/DT
and/CC
b/LS
is/VBZ
an/DT
alignment/JJ
of/IN
two/CD
strings/NNS
a/DT
and/CC
p/NN
such/JJ
a/DT
(/(
a/DT
and/CC
ft/JJ
{/NNP
b/LS
,/,
and/CC
the/DT
optimal/JJ
local/JJ
alignment/NN
of/IN
a/DT
and/CC
b/LS
is/VBZ
the/DT
local/JJ
alignment/NN
of/IN
a/DT
and/CC
b/LS
that/DT
has/VBZ
the/DT
highest/JJS
similarity/NN
among/IN
all/DT
local/JJ
alignments/NNS
of/IN
a/DT
and/CC
b/LS
./.
====================
We/PRP
denote/VBP
the/DT
similarity/NN
of/IN
an/DT
optimal/JJ
local/JJ
alignment/NN
by/IN
SL/NN
(/(
a/DT
,/,
b/LS
)/)
./.
====================
A/DT
most/JJS
well-known/RB
algorithm/NN
to/TO
find/VB
an/DT
optimal/JJ
local/JJ
alignment/NN
was/VBD
given/VBN
by/IN
Smith/JJ
and/CC
Waterman/JJ
,/,
which/WDT
is/VBZ
known/VBN
as/IN
the/DT
Smith-Waterman/JJ
algorithm/NN
(/(
SW/NN
algorithm/NN
for/IN
short/JJ
)/)
(/(
Smith/NN
and/CC
Waterman/JJ
,/,
1981/CD
;/:
Waterman/NNP
,/,
1995/CD
)/)
./.
====================
Given/IN
two/CD
sequences/NNS
a/DT
(/(
\a\=m/NNP
)/)
and/CC
b/LS
(/(
\b\=n/NNP
)/)
,/,
the/DT
SW/NN
algorithm/NN
computes/VBZ
SL/NN
(/(
a/DT
,/,
b/LS
)/)
using/VBG
a/DT
dynamic/JJ
programming/VBG
table/JJ
(/(
called/VBN
the/DT
H/NN
table/JJ
)/)
of/IN
size/NN
(/(
m+1/NN
)/)
(/(
n+1/NN
)/)
./.
====================
Let/NNP
H./NNP
,/,
for/IN
(/(
)/)
</JJR
i/LS
</JJR
m/NN
and/CC
0/CD
</JJR
j/RB
</JJR
n/NN
denote/JJ
SL/NN
(/(
a/DT
(/(
l/JJ
,/,
i/LS
)/)
,/,
b/LS
(/(
l/JJ
,/,
j/RB
)/)
)/)
./.
====================
Then/RB
,/,
can/MD
be/VB
====================
computed/VBN
by/IN
the/DT
following/VBG
recurrence/NN
:/:
====================
Among/IN
all/DT
Hu/NNP
for/IN
0/CD
</JJR
i/LS
</JJR
m/NN
and/CC
0/CD
</JJR
j/RB
</JJR
n/NN
,/,
the/DT
highest/JJS
value/NN
is/VBZ
SL/NN
(/(
a/DT
,/,
b/LS
)/)
,/,
and/CC
the/DT
SW/NN
algorithm/NN
takes/VBZ
0/CD
(/(
mn/NN
)/)
time/NN
to/TO
compute/VB
it/PRP
./.
====================
Since/IN
the/DT
SW/NN
algorithm/NN
does/VBZ
not/RB
consider/VB
the/DT
lengths/NNS
of/IN
local/JJ
alignments/NNS
,/,
the/DT
solution/NN
of/IN
the/DT
SW/NN
algorithm/NN
may/MD
include/VB
some/DT
regions/NNS
with/IN
very/RB
low/JJ
similarity/NN
./.
====================
Moreover/RB
,/,
a/DT
biologically/RB
important/JJ
short/JJ
alignment/NN
may/MD
not/RB
be/VB
detected/VBN
(/(
Arslan/NN
and/CC
Pevzner/NN
et/FW
al./FW
,/,
2001/CD
;/:
Alexandrov/RB
and/CC
Solovyev/NN
,/,
1998/CD
;/:
Zhang/NNP
and/CC
Miller/NN
etal./FW
,/,
1999/CD
)/)
./.
====================
To/TO
handle/VB
these/DT
problems/NNS
,/,
the/DT
notion/NN
of/IN
normalization/NN
for/IN
similarity/NN
has/VBZ
been/VBN
introduced/VBN
(/(
Arslan/NN
6/CD
./.
====================
Egecioglu/NN
(/(
1999/CD
)/)
,/,
Arslan/NN
et/FW
al./FW
,/,
2001/CD
;/:
Egecioglu/NNP
and/CC
Ibel/JJ
,/,
1996/CD
;/:
Marzal/JJ
and/CC
Vidal/JJ
,/,
====================
1993/CD
;/:
Alexandrov/RB
and/CC
Solovyev/NN
,/,
1998/CD
)/)
./.
====================
Given/IN
two/CD
sequences/NNS
a/DT
and/CC
b/LS
,/,
we/PRP
define/VBP
the/DT
normalized/VBN
similarity/NN
of/IN
a/DT
and/CC
b/LS
by/IN
,/,
S/NN
(/(
a/DT
,/,
b/LS
)/)
//:
(/(
\aMb\+L/NN
)/)
,/,
where/WRB
L/NN
is/VBZ
a/DT
constant/JJ
./.
====================
From/IN
this/DT
definition/NN
we/PRP
can/MD
define/VB
a/DT
normalized/JJ
alignment/NN
score/RB
for/IN
local/JJ
alignment/NN
:/:
the/DT
normalized/VBN
alignment/NN
score/RB
of/IN
an/DT
alignment/NN
a*/IN
and/CC
b*/IN
with/IN
alignment/JJ
vector/NN
(/(
x/CC
,/,
y/RB
,/,
z/NN
)/)
is/VBZ
defined/VBN
by/IN
nscore/RB
(/(
x/CC
,/,
y/RB
,/,
z/NN
)/)
=/JJ
====================
\+2/CD
y/RB
+z+L/NN
(/(
Arslan/NN
and/CC
Pevzner/NN
etal./FW
,/,
2001/CD
)/)
./.
====================
The/DT
opti­/JJ
====================
ma//RB
normalized/VBN
local/JJ
alignment/NN
of/IN
a/DT
and/CC
b/NN
is/VBZ
the/DT
local/JJ
alignment/NN
of/IN
a/DT
and/CC
b/NN
that/DT
has/VBZ
the/DT
highest/JJS
normalized/VBN
alignment/NN
score/RB
./.
====================
Here/RB
we/PRP
consider/VBP
two/CD
problems/NNS
related/JJ
to/TO
normalized/VBN
local/JJ
alignment/NN
:/:
one/CD
is/VBZ
to/TO
find/VB
the/DT
optimal/JJ
normalized/VBN
local/JJ
alignment/NN
of/IN
a/DT
and/CC
fr/JJ
,/,
the/DT
other/JJ
is/VBZ
to/TO
find/VB
all/DT
normalized/VBD
local/JJ
alignments/NNS
of/IN
a/DT
and/CC
b/LS
above/JJ
some/DT
threshold/JJ
Ts/NNS
./.
====================
Given/IN
two/CD
sequences/NNS
a/DT
and/CC
b/LS
,/,
let/NN
AV/NN
(/(
a/DT
,/,
b/LS
)/)
be/VB
the/DT
set/NN
of/IN
all/DT
possible/JJ
alignment/NN
vectors/NNS
of/IN
a/DT
{/JJ
a/DT
that/DT
ft/JJ
{/CD
b/LS
./.
====================
The/DT
problem/NN
of/IN
finding/NN
an/DT
optimal/JJ
local/JJ
alignment/NN
(/(
LA/NN
problem/NN
for/IN
short/JJ
)/)
and/CC
that/IN
of/IN
finding/NN
an/DT
optimal/JJ
normalized/VBN
local/JJ
alignment/NN
(/(
NLA/NN
problem/NN
for/IN
short/JJ
)/)
are/VBP
defined/VBN
as/IN
follows/VBZ
:/:
====================
LA/NN
problem/NN
:/:
Find/JJ
(/(
x/NN
,/,
y/RB
,/,
z/NN
)/)
e/NN
AV/NN
(/(
a/DT
,/,
b/LS
)/)
such/JJ
that/IN
score/VBP
(/(
x/NN
,/,
y/RB
,/,
====================
z/NN
)/)
is/VBZ
greatest/JJS
inAVfaz/NN
,/,
b/LS
)/)
./.
====================
NLA/NN
problem/NN
:/:
Find/JJ
(/(
x/NN
,/,
y/RB
,/,
z/NN
)/)
e/NN
AV/NN
(/(
a/DT
,/,
b/LS
)/)
such/JJ
that/IN
====================
nscore/RB
(/(
x/NN
,/,
y/RB
,/,
z/NN
)/)
is/VBZ
greatest/JJS
in/IN
AV/NN
(/(
a/DT
,/,
b/LS
)/)
./.
====================
Note/RB
that/DT
we/PRP
can/MD
find/VB
the/DT
score/NN
of/IN
an/DT
optimal/JJ
local/JJ
alignment/NN
using/VBG
the/DT
SW/NN
algorithm/NN
but/CC
with/IN
a/DT
simple/JJ
modification/NN
of/IN
storing/VBG
the/DT
starting/VBG
position/NN
of/IN
each/DT
score/RB
,/,
we/PRP
can/MD
also/RB
find/VBP
the/DT
location/NN
of/IN
the/DT
optimal/JJ
local/JJ
alignment/NN
./.
====================
For/IN
a/DT
given/VBN
A/NN
,/,
we/PRP
define/VBP
the/DT
parametric/JJ
local/JJ
alignment/NN
====================
problem/NN
as/IN
follows/VBZ
:/:
====================
LA/NN
(/(
A/NN
)/)
problem/NN
:/:
For/IN
all/DT
(/(
x/NN
,/,
y/RB
,/,
z/NN
)/)
EAV/NN
(/(
a/DT
,/,
b/LS
)/)
,/,
find/VBP
the/DT
====================
maximal/JJ
value/NN
ofx-J*/IN
y/RB
-/:
//z-^/DT
(/(
2x+2y+z+L/NN
)/)
====================
A/DT
parametric/JJ
local/JJ
alignment/NN
problem/NN
can/MD
be/VB
converted/VBN
into/IN
a/DT
local/JJ
alignment/NN
problem/NN
because/IN
the/DT
optimal/JJ
solution/NN
of/IN
LA/NN
(/(
A/DT
)/)
involves/VBZ
solving/JJ
a/DT
local/JJ
alignment/NN
problem/NN
and/CC
performing/VBG
some/DT
simple/JJ
computations/NNS
(/(
Arslan/NN
and/CC
Pevzner/NN
etal./FW
,/,
2001/CD
)/)
./.
====================
We/PRP
can/MD
use/VB
Dinkelbach/NN
’/CD
s/NNS
algorithm/NN
to/TO
solve/VB
the/DT
NLA/NN
problem/NN
./.
====================
Dinkelbach/DT
developed/VBD
a/DT
general/JJ
algorithm/NN
that/DT
uses/VBZ
fractional/JJ
programming/VBG
(/(
Dinkelbach/NN
,/,
1967/CD
)/)
./.
====================
The/DT
optimal/JJ
solution/NN
to/TO
NLA/NN
can/MD
be/VB
obtained/VBN
via/IN
a/DT
series/NN
of/IN
optimal/JJ
solutions/NNS
of/IN
LA/NN
(/(
A/DT
)/)
for/IN
different/JJ
A/NN
’/JJ
s/NNS
using/VBG
the/DT
following/VBG
result/NN
:/:
====================
A/DT
is/VBZ
the/DT
optimal/JJ
solution/NN
for/IN
NLA/NN
if/IN
and/CC
only/RB
if/IN
LA/NN
(/(
A/NN
)/)
=0/CD
./.
====================
Dinkelbach/DT
’/NNP
s/NNS
algorithm/NN
(/(
Dinkelbach/DT
,/,
1967/CD
)/)
(/(
See/NNP
Algorithm/NN
1/CD
)/)
starts/VBZ
with/IN
an/DT
initial/JJ
value/NN
for/IN
A/DT
and/CC
repeatedly/RB
solves/VBZ
LA/NN
(/(
A/DT
)/)
,/,
Since/IN
the/DT
LA/NN
(/(
A/DT
)/)
problem/NN
can/MD
be/VB
converted/VBN
into/IN
an/DT
LA/NN
problem/NN
,/,
it/PRP
solves/VBZ
the/DT
LA/NN
problem/NN
and/CC
obtains/NNS
an/DT
optimal/JJ
alignment/NN
vector/NN
(/(
x/CC
,/,
y/RB
,/,
z/NN
)/)
./.
====================
Next/RB
,/,
it/PRP
sets/NNS
A=/NN
nscore/RB
(/(
x/NN
,/,
v/LS
,/,
z/NN
)/)
and/CC
repeats/NNS
this/DT
process/NN
until/IN
A/DT
is/VBZ
not/RB
changed/VBN
any/DT
more/RBR
./.
====================
The/DT
convergence/NN
to/TO
the/DT
optimal/JJ
solution/NN
of/IN
the/DT
NLA/NN
problem/NN
is/VBZ
guaranteed/JJ
(/(
Arslan/NN
et/FW
al./FW
,/,
2001/CD
)/)
./.
====================
In/IN
some/DT
biological/JJ
applications/NNS
,/,
we/PRP
need/VBD
to/TO
find/VB
all/DT
local/JJ
alignments/NNS
whose/WP$
normalized/VBN
alignment/NN
scores/VBZ
are/VBP
above/JJ
a/DT
given/VBN
threshold/NN
./.
====================
Formally/RB
,/,
we/PRP
define/VBP
this/DT
problem/NN
as/IN
follows/VBZ
:/:
====================
TNLA/NN
problem/NN
:/:
For/IN
given/VBN
a/DT
threshold/JJ
value/NN
Ts/NNS
,/,
find/VBP
all/DT
(/(
x/NN
,/,
====================
y/RB
,/,
z/NN
)/)
e/NN
AV/NN
(/(
a/DT
,/,
b/LS
)/)
such/JJ
that/IN
nscore/RB
(/(
x/NN
,/,
y/RB
,/,
z/NN
)/)
====================
>/JJR
Ts/NNS
./.
====================
A/DT
local/JJ
alignment/NN
whose/WP$
normalized/VBN
alignment/NN
score/RB
is/VBZ
above/JJ
a/DT
given/VBN
threshold/NN
will/MD
be/VB
called/VBN
a/DT
TNL/NN
alignment/NN
./.
====================
Therefore/RB
,/,
the/DT
TNLA/NN
problem/NN
is/VBZ
to/TO
find/VB
all/DT
the/DT
TNL/NN
alignments/NNS
./.
====================
For/IN
the/DT
TNLA/NN
problem/NN
,/,
Arslan/NN
et/FW
al/JJ
./.
====================
(/(
2001/CD
)/)
first/JJ
solve/JJ
the/DT
NLA/NN
problem/NN
and/CC
then/RB
mask/VBP
the/DT
solution/NN
to/TO
repeatedly/RB
find/VBP
the/DT
next/JJ
optimal/JJ
solution/NN
of/IN
the/DT
NLA/NN
problem/NN
./.
====================
In/IN
general/JJ
,/,
it/PRP
is/VBZ
highly/RB
likely/RB
that/IN
an/DT
optimal/JJ
local/JJ
alignment/NN
has/VBZ
a/DT
long/JJ
part/NN
of/IN
exact/JJ
matches/NNS
in/IN
it/PRP
./.
====================
The/DT
banded/JJ
Smith-/JJ
Waterman/JJ
algorithm/NN
uses/VBZ
this/DT
phenomenon/NN
and/CC
finds/NNS
a/DT
solution/NN
very/RB
quickly/RB
for/IN
the/DT
LA/NN
problem/NN
with/IN
high/JJ
probability/NN
(/(
Setubal/JJ
and/CC
Meidanis/NNP
,/,
1997/CD
)/)
./.
====================
Many/JJ
biological/JJ
systems/NNS
such/JJ
as/IN
Phrap/NN
(/(
Green/NN
)/)
,/,
STROLL/NN
(/(
Chen/NNP
and/CC
Skiena/NN
,/,
1997/CD
)/)
and/CC
FASTA/NN
(/(
Lipman/JJ
and/CC
Pearson/NN
,/,
1998/CD
)/)
are/VBP
based/VBN
on/IN
this/DT
algorithm/NN
./.
====================
The/DT
banded/JJ
SW/NN
algorithm/NN
consists/VBZ
of/IN
the/DT
following/VBG
two/CD
steps/NNS
:/:
====================
1/CD
./.
====================
Determine/NN
bands/NNS
====================
Find/RB
all/DT
the/DT
bands/NNS
that/DT
can/MD
have/VB
local/JJ
alignments/NNS
with/IN
high/JJ
similarity/NN
./.
====================
Usually/RB
,/,
a/DT
band/NN
is/VBZ
defined/VBN
by/IN
the/DT
information/NN
of/IN
exact/JJ
matches/NNS
and/CC
if/IN
two/CD
or/CC
more/RBR
bands/NNS
overlap/NN
,/,
they/PRP
are/VBP
merged/VBN
into/IN
one/CD
band/NN
./.
====================
2/CD
./.
====================
Run/NN
the/DT
SW/NN
algorithm/NN
====================
Run/NN
the/DT
SW/NN
algorithm/NN
on/IN
the/DT
defined/VBN
bands/NNS
./.
====================
The/DT
entries/NNS
of/IN
Hi.j/JJ
outside/IN
the/DT
bands/NNS
are/VBP
assumed/VBN
0/CD
and/CC
they/PRP
are/VBP
not/RB
computed/VBN
./.
====================
We/PRP
first/RB
present/JJ
an/DT
algorithm/NN
for/IN
finding/NN
an/DT
optimally/RB
normalized/VBN
local/JJ
alignment/NN
(/(
the/DT
NLA/NN
problem/NN
)/)
and/CC
then/RB
present/JJ
algorithms/NNS
for/IN
finding/NN
all/DT
local/JJ
alignments/NNS
whose/WP$
normalized/VBN
alignment/NN
scores/VBZ
are/VBP
above/JJ
a/DT
given/VBN
threshold/NN
Ts/NNS
(/(
the/DT
TNLA/NN
problem/NN
)/)
./.
====================
Our/PRP$
algorithm/NN
for/IN
the/DT
NLA/NN
problem/NN
is/VBZ
used/VBN
as/IN
a/DT
subroutine/JJ
in/IN
our/PRP$
algorithms/NNS
for/IN
the/DT
TNLA/NN
====================
problem/NN
./.
====================
We/PRP
present/VBP
an/DT
algorithm/NN
for/IN
the/DT
NLA/NN
problem/NN
of/IN
two/CD
strings/NNS
a/DT
(/(
\a\=m/NN
)/)
and/CC
b/NN
(/(
\b\=ri/NNP
)/)
./.
====================
Our/PRP$
algorithm/NN
is/VBZ
based/VBN
on/IN
Dinkelbach/NN
’/CD
s/NNS
algorithm/NN
which/WDT
is/VBZ
a/DT
general/JJ
algorithm/NN
to/TO
solve/VB
the/DT
NLA/NN
problem/NN
./.
====================
We/PRP
use/VBP
the/DT
banded/JJ
SW/NN
algorithm/NN
to/TO
solve/VB
the/DT
LA/NN
problem/NN
in/IN
Dinkelbach/NN
’/CD
s/NNS
algorithm/NN
./.
====================
Since/IN
we/PRP
already/RB
described/VBN
Dinkelbach/NN
’/CD
s/NNS
algorithm/NN
and/CC
the/DT
banded/JJ
SW/NN
algorithm/NN
,/,
we/PRP
concentrate/VBP
on/IN
describing/VBG
how/WRB
to/TO
determine/VB
bands/NNS
./.
====================
We/PRP
first/RB
introduce/VBP
some/DT
definitions/NNS
before/IN
we/PRP
describe/VBP
how/WRB
to/TO
determine/VB
the/DT
bands/NNS
./.
====================
Consider/NN
the/DT
H/NN
table/JJ
generated/VBN
by/IN
the/DT
SW/NN
algorithm/NN
in/IN
computing/VBG
SLfa/NN
,/,
b/LS
)/)
./.
====================
The/DT
fth-diagonal/JJ
(/(
or/CC
diagonal/JJ
i/LS
)/)
,/,
Q/NN
</JJR
i/LS
</JJR
m/NN
(/(
resp/NN
./.
====================
-n/JJ
</JJR
f/IN
</JJR
-1/CD
)/)
,/,
represents/VBZ
a/DT
diagonal/JJ
that/DT
passes/NNS
through/IN
(/(
0/CD
,/,
i/LS
)/)
(/(
resp/NN
./.
====================
(/(
-i/JJ
,/,
0/CD
)/)
)/)
element/NN
of/IN
the/DT
H/NN
table/JJ
./.
====================
A/DT
band/NN
is/VBZ
a/DT
set/NN
of/IN
diagonals/NNS
and/CC
the/DT
width/JJ
of/IN
a/DT
band/NN
is/VBZ
the/DT
number/NN
of/IN
diagonals/NNS
in/IN
the/DT
band/NN
./.
====================
A/DT
band/NN
i/LS
of/IN
width/JJ
k/NN
is/VBZ
a/DT
set/NN
of/IN
diagonals/NNS
from/IN
i/LS
through/IN
i+k-/JJ
====================
1/CD
./.
====================
We/PRP
say/VBP
that/DT
an/DT
exact/JJ
match/VBP
(/(
i/LS
,/,
j/RB
)/)
occurs/VBZ
in/IN
diagonal/JJ
k/NN
if/IN
a/DT
(/(
i/LS
,/,
j/RB
)/)
=/JJ
b/LS
(/(
i+k/NN
,/,
j+k/RB
)/)
./.
====================
Exact/NN
match/VBP
(/(
i/LS
,/,
j/RB
)/)
is/VBZ
maximal/JJ
if/IN
a-i^bi+k-i/NN
and/CC
ai+i=Abj+M/NN
./.
====================
The/DT
length/NN
of/IN
exact/JJ
match/VBP
(/(
i/LS
,/,
j/RB
)/)
is/VBZ
j-i+1/NN
./.
====================
We/PRP
show/VBP
how/IN
to/TO
determine/VB
the/DT
bands/NNS
with/IN
given/VBN
parameters/NNS
7/CD
)/)
,/,
w/RB
,/,
and/CC
7k/JJ
The/DT
parameter/NN
T/NN
is/VBZ
a/DT
threshold/JJ
on/IN
the/DT
length/NN
of/IN
an/DT
exact/JJ
match/VBP
,/,
w/RB
is/VBZ
the/DT
width/JJ
of/IN
a/DT
band/NN
,/,
and/CC
Tb/NN
is/VBZ
a/DT
threshold/JJ
on/IN
the/DT
weight/NN
of/IN
a/DT
band/NN
./.
====================
Determining/VBG
the/DT
bands/NNS
is/VBZ
composed/VBN
of/IN
the/DT
following/VBG
four/CD
steps/NNS
:/:
====================
1/CD
./.
====================
Find/RB
all/DT
maximal/JJ
exact/JJ
matches/NNS
longer/RBR
than/IN
T/NN
in/IN
each/DT
diagonal/JJ
./.
====================
We/PRP
first/RB
generate/VBP
all/DT
suffixes/NNS
of/IN
a/DT
and/CC
b/NN
and/CC
sort/NN
them/PRP
in/IN
lexicographic/JJ
order/NN
./.
====================
Once/RB
all/DT
the/DT
suffixes/NNS
of/IN
a/DT
and/CC
b/NN
are/VBP
sorted/VBN
,/,
it/PRP
is/VBZ
easy/RB
to/TO
find/VB
all/DT
maximal/JJ
exact/JJ
matches/NNS
longer/RBR
than/IN
T/NN
./.
====================
2/CD
./.
====================
Compute/JJ
the/DT
weight/NN
of/IN
each/DT
diagonal/JJ
,/,
where/WRB
the/DT
weight/NN
of/IN
a/DT
diagonal/JJ
is/VBZ
the/DT
sum/NN
of/IN
the/DT
lengths/NNS
of/IN
all/DT
maximal/JJ
exact/JJ
matches/NNS
longer/RBR
than/IN
T/NN
in/IN
the/DT
diagonal/JJ
./.
====================
3/CD
./.
====================
Select/JJ
every/RB
band/NN
b/LS
of/IN
width/JJ
w/NN
whose/WP$
weight/NN
is/VBZ
above/JJ
Tb/NN
,/,
where/WRB
the/DT
weight/NN
of/IN
a/DT
band/NN
is/VBZ
the/DT
sum/NN
of/IN
the/DT
weights/NNS
of/IN
all/DT
diagonals/NNS
in/IN
the/DT
band/NN
./.
====================
4/CD
./.
====================
Merge/JJ
two/CD
bands/NNS
Bi=/NN
{/CD
di/NN
,/,
dj/RB
}/CD
and/CC
B/NN
2/CD
=/JJ
{/CD
dk/NN
,/,
—/CD
di/NN
}/CD
into/IN
a/DT
====================
single/JJ
band/NN
B=/NN
{/CD
min/NN
(/(
d/FW
,/,
dk/VBP
)/)
,/,
•••/NNP
,/,
mwcfd/JJ
,/,
di/JJ
)/)
}/CD
,/,
if/IN
they/PRP
overlap/VBP
(/(
i.e./FW
,/,
i/LS
</JJR
k/NN
</JJR
j/RB
or/CC
i/LS
</JJR
l/JJ
</JJR
j/RB
)/)
./.
====================
Repeat/NN
merging/VBG
until/IN
no/DT
two/CD
bands/NNS
overlap/NN
./.
====================
(/(
Fig/NN
./.
====================
1/CD
)/)
====================
Parameters/NNS
T/NN
,/,
w/RB
,/,
and/CC
Tb/NN
should/MD
be/VB
chosen/NN
appropriately/RB
so/RB
that/IN
an/DT
optimal/JJ
normalized/VBN
local/JJ
alignment/NN
does/VBZ
not/RB
lie/VB
out/IN
of/IN
the/DT
bands/NNS
./.
====================
In/IN
Section/NN
4/CD
,/,
we/PRP
suggest/VBP
appropriate/JJ
values/NNS
for/IN
Ti/NN
,/,
w/JJ
,/,
and/CC
Tb/NN
through/IN
experiments/NNS
./.
====================
Our/PRP$
algorithm/NN
for/IN
the/DT
NLA/NN
problem/NN
first/JJ
determines/NNS
the/DT
bands/NNS
as/IN
explained/VBN
above/JJ
and/CC
then/RB
runs/NNS
the/DT
SW/NN
algorithm/NN
on/IN
the/DT
selected/VBN
bands/NNS
./.
====================
The/DT
speedup/JJ
achieved/VBD
by/IN
our/PRP$
algorithm/NN
over/IN
Arslan/NN
et/FW
al/JJ
./.
'/``
====================
s/NNS
is/VBZ
due/JJ
to/TO
the/DT
following/VBG
two/CD
improvements/NNS
./.
====================
■/CD
We/PRP
uses/VBZ
the/DT
banded/JJ
SW/NN
algorithm/NN
to/TO
solve/VB
the/DT
LA/NN
====================
problem/NN
of/IN
Dinkelbach/NN
’/CD
s/NNS
algorithm/NN
while/IN
Arslan/NN
et/FW
al/JJ
./.
====================
used/VBN
the/DT
SW/NN
algorithm/NN
./.
====================
Thus/RB
,/,
the/DT
speedup/NN
achieved/VBD
by/IN
the/DT
banded/JJ
SW/NN
algorithm/NN
over/IN
the/DT
SW/NN
algorithm/NN
is/VBZ
reflected/VBN
in/IN
our/PRP$
algorithm/NN
./.
====================
We/PRP
perform/VBP
the/DT
step/NN
of/IN
determining/VBG
bands/NNS
in/IN
the/DT
banded/JJ
SW/NN
algorithm/NN
only/RB
once/RB
while/IN
we/PRP
perform/VBP
the/DT
banded/JJ
SW/NN
algorithm/NN
several/JJ
times/NNS
in/IN
Dinkelbach/DT
’/CD
s/NNS
algorithm/NN
./.
====================
Since/IN
the/DT
bands/NNS
are/VBP
the/DT
sets/NNS
of/IN
diagonals/NNS
where/WRB
long/JJ
exact/JJ
matches/NNS
occur/VBP
,/,
the/DT
bands/NNS
in/IN
all/DT
repetitions/NNS
of/IN
the/DT
banded/JJ
SW/NN
algorithm/NN
are/VBP
the/DT
same/JJ
./.
====================
Hence/RB
,/,
we/PRP
need/VBD
to/TO
determine/VB
the/DT
bands/NNS
only/RB
once/RB
./.
====================
We/PRP
now/RB
present/JJ
algorithms/NNS
for/IN
the/DT
TNLA/NN
problem/NN
of/IN
two/CD
strings/NNS
a/DT
and/CC
b/NN
./.
====================
We/PRP
first/RB
give/VBP
a/DT
simple/JJ
algorithm/NN
that/DT
finds/VBZ
all/DT
normalized/VBD
local/JJ
alignments/NNS
whose/WP$
alignment/JJ
scores/VBZ
are/VBP
above/JJ
a/DT
given/VBN
threshold/NN
L/NN
(/(
the/DT
TNL/NN
alignments/NNS
)/)
in/IN
such/JJ
a/DT
way/NN
that/DT
a/DT
TNL/NN
alignment/NN
of/IN
larger/RBR
alignment/JJ
score/RB
is/VBZ
found/VBN
earlier/RBR
than/IN
a/DT
TNL/NN
alignment/NN
of/IN
smaller/JJR
alignment/NN
score/RB
./.
====================
Arslan/NN
etal/JJ
./.
====================
(/(
Arslan/NN
etal./FW
,/,
2001/CD
)/)
also/RB
found/VBD
the/DT
TNL/NN
alignments/NNS
in/IN
the/DT
same/JJ
decreasing/VBG
order/NN
./.
====================
Then/RB
,/,
we/PRP
improve/VBP
the/DT
simple/JJ
algorithm/NN
by/IN
finding/NN
the/DT
TNL/NN
alignments/NNS
in/IN
a/DT
somewhat/RB
different/JJ
order/NN
./.
====================
The/DT
simple/JJ
algorithm/NN
consists/VBZ
of/IN
two/CD
steps/NNS
./.
====================
Step/JJ
1/CD
is/VBZ
performed/VBN
once/RB
and/CC
step/NN
2/CD
is/VBZ
repeated/VBN
until/IN
all/DT
TNL/NN
alignments/NNS
are/VBP
found/VBN
./.
====================
Step/JJ
1/CD
./.
====================
Find/RB
all/DT
maximal/JJ
exact/JJ
matches/NNS
of/IN
a/DT
and/CC
b/NN
longer/RBR
====================
than/IN
Ti/NN
and/CC
determine/VBP
the/DT
bands/NNS
as/IN
we/PRP
did/VBD
in/IN
Section/NN
3.1/CD
./.
====================
Step/JJ
2/CD
./.
====================
Find/RB
an/DT
optimal/JJ
normalized/VBN
local/JJ
alignment/NN
of/IN
a/DT
and/CC
====================
b/LS
using/VBG
the/DT
algorithm/NN
presented/VBN
in/IN
Section/NN
3.1/CD
./.
====================
If/IN
the/DT
alignment/NN
score/RB
of/IN
the/DT
found/VBN
alignment/NN
is/VBZ
above/JJ
T/NN
,/,
mask/NN
the/DT
found/VBN
alignment/NN
and/CC
repeat/NN
====================
step/NN
2/CD
./.
====================
Otherwise/JJ
,/,
terminate/VB
./.
====================
The/DT
simple/JJ
algorithm/NN
finds/NNS
the/DT
normalized/VBN
local/JJ
alignments/NNS
in/IN
decreasing/VBG
order/NN
of/IN
alignment/NN
scores/VBZ
./.
====================
Hence/RB
,/,
it/PRP
is/VBZ
guaranteed/JJ
that/DT
every/RB
TNL/NN
alignment/NN
has/VBZ
been/VBN
found/VBN
when/WRB
the/DT
simple/JJ
algorithm/NN
terminates/VBZ
./.
====================
We/PRP
consider/VBP
the/DT
speedup/NN
achieved/VBD
by/IN
the/DT
simple/JJ
algorithm/NN
over/IN
Arslan/NN
et/FW
a/./FW
’/CD
s/NNS
algorithm/NN
./.
====================
Let/NN
p/NN
denote/VBP
the/DT
number/NN
of/IN
the/DT
TNL/NN
alignments/NNS
./.
====================
Step/JJ
2/CD
iterates/VBZ
just/RB
p/NN
times/NNS
./.
====================
Since/IN
the/DT
time/NN
for/IN
masking/VBG
an/DT
alignment/NN
is/VBZ
negligible/JJ
and/CC
our/PRP$
algorithm/NN
performs/NNS
step/NN
1/CD
only/RB
once/RB
,/,
our/PRP$
simple/JJ
algorithm/NN
for/IN
the/DT
TNLA/NN
problem/NN
takes/VBZ
about/RB
p/NN
times/NNS
our/PRP$
algorithm/NN
for/IN
the/DT
NLA/NN
problem/NN
./.
====================
Also/RB
,/,
Arslan/NN
et/FW
a/./FW
’/CD
s/NNS
algorithm/NN
for/IN
the/DT
TNLA/NN
problem/NN
takes/VBZ
p/NN
times/NNS
their/PRP$
algorithm/NN
for/IN
the/DT
NLA/NN
problem/NN
./.
====================
Therefore/RB
,/,
the/DT
speedup/JJ
achieved/VBD
by/IN
our/PRP$
simple/JJ
algorithm/NN
over/IN
Arslan/NN
et/FW
al/JJ
’/CD
s/NNS
algorithm/NN
for/IN
the/DT
TNLA/NN
problem/NN
is/VBZ
the/DT
speedup/JJ
achieved/VBD
by/IN
our/PRP$
algorithm/NN
over/IN
Arslan/NN
et/FW
a/./FW
’/CD
s/NNS
algorithm/NN
for/IN
the/DT
NLA/NN
problem/NN
./.
====================
As/IN
long/JJ
as/IN
all/DT
the/DT
TNL/NN
alignments/NNS
are/VBP
guaranteed/JJ
to/TO
be/VB
found/VBN
,/,
the/DT
order/NN
of/IN
the/DT
alignments/NNS
that/DT
are/VBP
found/VBN
may/MD
not/RB
be/VB
important/JJ
./.
====================
If/IN
we/PRP
find/VBP
the/DT
TNL/NN
alignments/NNS
in/IN
a/DT
different/JJ
order/NN
,/,
we/PRP
can/MD
find/VB
them/PRP
more/RBR
efficiently/RB
./.
====================
The/DT
improved/JJ
algorithm/NN
is/VBZ
as/IN
follows/VBZ
./.
====================
Step/JJ
1/CD
./.
====================
Find/RB
all/DT
maximal/JJ
exact/JJ
matches/NNS
of/IN
a/DT
and/CC
b/NN
longer/RBR
====================
than/IN
T//JJ
and/CC
determine/VBP
the/DT
bands/NNS
as/IN
in/IN
Section/NN
3.1/CD
./.
====================
Let/NN
Bi/NN
,/,
B2/NN
,/,
“/CD
,/,
Bk/NN
denote/VBP
the/DT
bands/NNS
./.
====================
Step/JJ
2/CD
./.
====================
For/IN
each/DT
band/NN
B/NN
>/JJR
for/IN
1/CD
</JJR
i/LS
</JJR
k/NN
,/,
perform/VBP
the/DT
following/VBG
./.
====================
Find/RB
an/DT
optimal/JJ
normalized/VBN
local/JJ
alignment/NN
within/IN
Bi/NN
by/IN
running/VBG
the/DT
SW/NN
algorithm/NN
only/RB
in/IN
Bi/NN
./.
====================
If/IN
the/DT
normalized/VBN
alignment/NN
score/RB
of/IN
the/DT
found/VBN
alignment/NN
is/VBZ
above/JJ
L/NN
,/,
mask/NN
the/DT
found/VBN
alignment/NN
and/CC
repeat/NN
./.
====================
Otherwise/JJ
,/,
we/PRP
are/VBP
done/VBN
with/IN
Bi/NN
./.
====================
It/PRP
is/VBZ
easy/RB
to/TO
see/VB
that/DT
all/DT
the/DT
TNL/NN
alignments/NNS
have/VBP
been/VBN
====================
found/VBN
when/WRB
the/DT
improved/JJ
algorithm/NN
terminates/VBZ
./.
====================
We/PRP
consider/VBP
the/DT
speedup/NN
achieved/VBD
by/IN
the/DT
improved/JJ
algorithm/NN
over/IN
the/DT
simple/JJ
algorithm/NN
./.
====================
Let/NN
C/NN
,/,
l/JJ
</JJR
i/LS
</JJR
k/NN
,/,
denote/VBP
the/DT
number/NN
of/IN
the/DT
TNL/NN
alignments/NNS
included/VBD
in/IN
band/NN
B./FW
and/CC
====================
W/NN
the/DT
width/JJ
of/IN
B/NN
,/,
./.
====================
In/IN
the/DT
improved/JJ
algorithm/NN
,/,
band/NN
B/NN
,/,
accessed/VBD
when/WRB
we/PRP
find/VBP
each/DT
of/IN
C/NN
TNL/NN
alignments/NNS
while/IN
====================
the/DT
simple/JJ
algorithm/NN
,/,
all/DT
bands/NNS
Bi/NN
,/,
B2/NN
,/,
•••/CD
,/,
B/NN
k/NN
are/VBP
accessed/VBN
====================
when/WRB
we/PRP
find/VBP
each/DT
of/IN
G+C2+—+G/NN
TNL/NN
alignments/NNS
./.
====================
Note/RB
that/DT
the/DT
improved/JJ
algorithm/NN
accesses/VBZ
B/NN
,/,
at/IN
least/JJS
once/RB
even/RB
if/IN
there/EX
is/VBZ
no/DT
TNL/NN
alignment/NN
in/IN
it/PRP
./.
====================
Hence/RB
,/,
the/DT
speedup/NN
achieved/VBD
by/IN
the/DT
improved/JJ
algorithm/NN
over/IN
the/DT
simple/JJ
algorithm/NN
is/VBZ
====================
Remark/NN
:/:
We/PRP
can/MD
consider/VB
affine/VBP
gaps/VBZ
in/IN
both/CC
problems/NNS
of/IN
====================
NLA/NN
and/CC
TNLA/NN
./.
====================
The/DT
affine/NN
gap/NN
penalty/NN
for/IN
a/DT
gap/JJ
is/VBZ
defined/VBN
as/IN
7+/*k/JJ
,/,
where/WRB
7/CD
is/VBZ
a/DT
gap/JJ
open/JJ
penalty/NN
,/,
p/NN
is/VBZ
an/DT
indel/NN
====================
penalty/NN
and/CC
k/NN
is/VBZ
the/DT
length/NN
of/IN
a/DT
gap/NN
./.
====================
We/PRP
can/MD
include/VB
the/DT
affine/NN
gap/NN
penalty/NN
in/IN
our/PRP$
algorithms/NNS
for/IN
NLA/NN
and/CC
TNLA/NN
by/IN
a/DT
simple/JJ
modification/NN
of/IN
the/DT
recurrence/NN
of/IN
the/DT
SW/NN
algorithm/NN
(/(
Gotoh/NNP
1982/CD
;/:
Waterman/NNP
1995/CD
)/)
./.
====================
We/PRP
implemented/VBD
and/CC
compared/VBN
two/CD
algorithms/NNS
for/IN
the/DT
NLA/NN
problem/NN
:/:
Arslan/JJ
et/FW
al/JJ
./.
'/``
====================
s/NNS
and/CC
ours/VBZ
,/,
and/CC
three/CD
algorithms/NNS
for/IN
the/DT
TNLA/NN
problem/NN
:/:
Arslan/JJ
et/FW
al/JJ
’/CD
.s/NNS
algorithm/NN
,/,
our/PRP$
simple/JJ
algorithm/NN
and/CC
our/PRP$
improved/JJ
algorithm/NN
./.
====================
In/IN
all/DT
our/PRP$
implementations/NNS
,/,
we/PRP
considered/VBD
the/DT
affine/NN
gaps/VBZ
./.
====================
We/PRP
have/VBP
chosen/NN
two/CD
data/NNS
sets/NNS
to/TO
test/VB
the/DT
efficiency/NN
of/IN
the/DT
algorithms/NNS
:/:
(/(
i/LS
)/)
human/JJ
chromosome/NN
X/NN
cosmids/NNS
Qc8D3/NN
(/(
GenBank/NN
Acc/NN
./.
====================
No/DT
./.
====================
AF030876/NN
(/(
113/CD
kbp/NN
)/)
)/)
and/CC
mouse/NN
chromosome/NN
X/NN
clone/NN
BAC/NN
B22804/NN
(/(
GenBank/NN
Acc/NN
./.
====================
No/DT
./.
====================
AF121351/NN
(/(
123/CD
kbp/NN
)/)
)/)
and/CC
(/(
ii/LS
)/)
human/JJ
(/(
GenBank/NN
Acc/NN
./.
====================
No/DT
./.
====================
L10347/NN
(/(
31/CD
kbp/NN
)/)
)/)
and/CC
mouse/NN
(/(
GenBank/NN
Acc/NN
./.
====================
No/DT
./.
====================
M65161/NN
(/(
32.4/CD
kbp/NN
)/)
)/)
pro-alpha1/NN
type/NN
II/CD
collagen/NN
./.
====================
Since/IN
the/DT
repeats/NNS
which/WDT
are/VBP
biologically/RB
uninteresting/JJ
regions/NNS
may/MD
have/VB
high/JJ
normalized/VBN
scores/VBZ
,/,
we/PRP
masked/VBD
the/DT
repeats/NNS
by/IN
RepeatMasker/NN
(/(
http/NN
:/:
///CD
repeatmasker/NN
,/,
genome.washington/JJ
./.
====================
edu//RB
)/)
before/IN
running/VBG
all/DT
the/DT
algorithms/NNS
./.
====================
We/PRP
implemented/VBD
all/DT
the/DT
algorithms/NNS
in/IN
C++/JJ
language/NN
./.
====================
The/DT
programs/NNS
were/VBD
run/JJ
on/IN
Pentium/NN
III/CD
866MHzx2/NN
work­/NN
station/NN
with/IN
768MB/JJ
main/JJ
memory/NN
./.
====================
The/DT
parameter/NN
values/NNS
used/VBN
in/IN
our/PRP$
algorithms/NNS
are/VBP
as/IN
follows/VBZ
:/:
L=2000/CD
(/(
a/DT
constant/JJ
in/IN
defining/VBG
normalized/VBN
scores/VBZ
)/)
,/,
£=1/NN
(/(
mismatch/NN
penalty/NN
)/)
,/,
7/CD
=6/CD
(/(
gap/NN
open/JJ
penalty/NN
)/)
,/,
/z=0.2/CD
(/(
indel/NN
penalty/NN
)/)
,/,
and/CC
T=0.035/NN
(/(
threshold/RB
of/IN
normalized/VBN
score/RB
)/)
./.
====================
Our/PRP$
algorithm/NN
finds/NNS
the/DT
same/JJ
optimal/JJ
normalized/VBN
local/JJ
alignment/NN
as/IN
Arslan/JJ
et/FW
al./FW
’/CD
s/NNS
algorithm/NN
does/VBZ
even/RB
when/WRB
w=100/CD
for/IN
both/DT
data/NNS
sets/NNS
./.
====================
As/IN
shown/VBN
in/IN
Table/JJ
1/CD
,/,
our/PRP$
algorithm/NN
is/VBZ
about/RB
20/CD
times/NNS
faster/JJR
than/IN
Arslan/NN
et/FW
al/JJ
./.
'/``
====================
s/NNS
for/IN
both/DT
data/NNS
sets/NNS
when/WRB
w/VBN
>/JJR
150/CD
and/CC
Ti/NNP
</JJR
150/CD
./.
====================
We/PRP
have/VBP
experimented/VBN
with/IN
various/JJ
values/NNS
of/IN
the/DT
three/CD
parameters/NNS
Ti/NNP
,/,
T/NN
>/JJR
and/CC
w/IN
,/,
and/CC
here/RB
we/PRP
show/VBP
nine/CD
cases/NNS
for/IN
three/CD
values/NNS
of/IN
Ti/NNP
and/CC
three/CD
values/NNS
of/IN
w/JJ
and/CC
we/PRP
have/VBP
chosen/NN
an/DT
appropriate/JJ
value/NN
of/IN
TI/LS
for/IN
each/DT
T./FW
Note/JJ
that/DT
we/PRP
====================
decrease/NN
T/NN
b/NN
as/IN
Ti/NN
increases/VBZ
./.
====================
Otherwise/JJ
,/,
good/JJ
bands/NNS
may/MD
====================
be/VB
discarded/VBN
since/IN
longer/RBR
exact/JJ
matches/NNS
are/VBP
fewer/JJR
than/IN
shorter/JJR
exact/JJ
matches/NNS
./.
====================
Table/JJ
2/CD
and/CC
Table/JJ
3/CD
show/VBP
execution/NN
times/NNS
of/IN
the/DT
three/CD
algorithms/NNS
for/IN
the/DT
TNLA/NN
problem/NN
./.
====================
We/PRP
first/RB
analyze/VB
the/DT
ratios/NNS
of/IN
execution/NN
times/NNS
of/IN
the/DT
three/CD
algorithms/NNS
./.
====================
Assume/DT
that/DT
the/DT
widths/NNS
of/IN
all/DT
bands/NNS
are/VBP
the/DT
same/JJ
and/CC
the/DT
TNL/NN
alignments/NNS
are/VBP
equally/RB
distributed/VBN
in/IN
the/DT
bands/NNS
which/WDT
include/VBP
TNL/NN
alignments/NNS
./.
====================
Let/NN
k/NN
be/VB
the/DT
number/NN
of/IN
the/DT
bands/NNS
====================
that/DT
our/PRP$
algorithms/NNS
determine/VBP
,/,
and/CC
k/NN
’/CD
be/VB
the/DT
number/NN
of/IN
the/DT
bands/NNS
which/WDT
include/VBP
TNL/NN
alignments/NNS
./.
====================
Also/RB
,/,
let/NN
t/NN
be/VB
the/DT
average/NN
number/NN
of/IN
TNL/NN
alignments/NNS
in/IN
a/DT
band/NN
./.
====================
Then/RB
,/,
the/DT
equation/NN
(/(
1/CD
)/)
can/MD
be/VB
rewritten/VBN
as/IN
follows/VBZ
:/:
====================
kk't/RB
====================
k't+k-k/NN
'/``
====================
Hence/RB
,/,
our/PRP$
improved/JJ
algorithm/NN
is/VBZ
faster/JJR
than/IN
Arslan/NN
et/FW
al/JJ
’/CD
s/NNS
by/IN
the/DT
following/VBG
factor/NN
:/:
====================
where/WRB
5/CD
is/VBZ
the/DT
speedup/NN
of/IN
our/PRP$
simple/JJ
algorithm/NN
over/IN
Arslan/NN
et/FW
al./FW
’/CD
s/NNS
./.
====================
Consider/NN
the/DT
experimental/JJ
results/NNS
for/IN
the/DT
first/JJ
data/NNS
set/VBP
in/IN
Table/JJ
2/CD
./.
====================
When/WRB
w=150/CD
,/,
7/=15/CD
and/CC
T/NN
>/JJR
=50/CD
,/,
we/PRP
have/VBP
5=80/CD
and/CC
k=5/NN
,/,
k/NN
’/CD
=5/CD
,/,
t=\/3/DT
(/(
k/NN
,/,
k/NN
’/CD
are/VBP
not/RB
shown/VBN
in/IN
Table/JJ
2/CD
since/IN
the/DT
number/NN
of/IN
TNL/NN
alignments/NNS
is/VBZ
15/CD
as/IN
shown/VBN
in/IN
Table/JJ
4/CD
)/)
./.
====================
By/IN
the/DT
above/JJ
formula/FW
,/,
our/PRP$
improved/JJ
algorithm/NN
should/MD
be/VB
approximately/RB
400/CD
times/NNS
faster/JJR
than/IN
Arslan/NN
et/FW
a/./FW
’/CD
s/NNS
and/CC
the/DT
result/NN
(/(
631603/1895=330/CD
)/)
is/VBZ
similar/JJ
to/TO
our/PRP$
expectation/NN
./.
====================
(/(
Note/NN
that/DT
the/DT
time/NN
of/IN
the/DT
improved/JJ
algorithm/NN
can/MD
vary/VB
depending/VBG
on/IN
the/DT
value/NN
of/IN
71/CD
in/IN
each/DT
case/NN
./.
)/)
====================
For/IN
another/DT
example/NN
,/,
when/WRB
w=200/CD
,/,
T/NN
</JJR
=12/CD
and/CC
71=80/CD
,/,
we/PRP
get/VBP
5=18/CD
,/,
£=24/CD
,/,
£/CD
=5/CD
and/CC
r=1/3/NN
./.
====================
Thus/RB
,/,
our/PRP$
improved/JJ
algorithm/NN
should/MD
be/VB
about/RB
200/CD
times/NNS
faster/JJR
than/IN
Arslan/NN
etal/JJ
’/CD
s/NNS
and/CC
the/DT
result/NN
(/(
631603/3492=180/CD
)/)
shows/VBZ
an/DT
approximately/RB
same/JJ
ratio/NN
./.
====================
For/IN
the/DT
second/JJ
data/NNS
set/VBP
,/,
our/PRP$
algorithm/NN
is/VBZ
about/RB
40/CD
times/NNS
faster/JJR
than/IN
Arslan/NN
et/FW
al/JJ
’/CD
s/NNS
when/WRB
w=150/CD
,/,
77=15/CD
and/CC
71=50/CD
,/,
and/CC
about/RB
50/CD
times/NNS
faster/JJR
when/WRB
w=200/CD
,/,
77=12/CD
and/CC
71=80/CD
./.
====================
Table/JJ
4/CD
shows/VBZ
the/DT
accuracy/NN
of/IN
our/PRP$
algorithms/NNS
./.
====================
For/IN
example/NN
,/,
when/WRB
w=100/CD
,/,
77=20/CD
and/CC
71=30/CD
in/IN
Table/JJ
4/CD
,/,
our/PRP$
algorithms/NNS
find/VBP
12/CD
out/RP
of/IN
15/CD
TNL/NN
alignments/NNS
./.
====================
But/CC
as/IN
w/JJ
increases/VBZ
and/CC
T/NN
decreases/NNS
,/,
our/PRP$
algorithms/NNS
are/VBP
getting/VBG
more/RBR
accurate/JJ
./.
====================
Note/RB
that/DT
our/PRP$
algorithms/NNS
find/VBP
all/DT
TNL/NN
alignments/NNS
when/WRB
w/VBN
>/JJR
150/CD
and/CC
T/NN
</JJR
15/CD
./.
====================
In/IN
addition/NN
to/TO
extremely/RB
fast/JJ
speeds/VBZ
,/,
another/DT
advantage/NN
of/IN
our/PRP$
algorithms/NNS
is/VBZ
that/DT
we/PRP
can/MD
change/VB
the/DT
parameters/NNS
w/IN
,/,
Ti/NNP
and/CC
71/CD
to/TO
adjust/JJ
the/DT
time/NN
and/CC
accuracy/NN
of/IN
our/PRP$
algorithms/NNS
./.
====================
