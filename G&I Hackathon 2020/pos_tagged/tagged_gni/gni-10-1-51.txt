An/DT
Efficient/JJ
Approach/NN
to/TO
Mining/JJ
Maximal/JJ
Contiguous/JJ
Frequent/JJ
Patterns/NN
from/IN
Large/JJ
DNA/NN
Sequence/NN
Databases/NNS
./.
====================
Mining/VBG
interesting/JJ
patterns/NNS
from/IN
DNA/NN
sequences/NNS
is/VBZ
one/CD
of/IN
the/DT
most/JJS
challenging/VBG
tasks/NNS
in/IN
bioinformatics/NNS
and/CC
computational/JJ
biology/NN
./.
====================
Maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
are/VBP
preferable/JJ
for/IN
expressing/VBG
the/DT
function/NN
and/CC
structure/NN
of/IN
DNA/NN
sequences/NNS
and/CC
hence/RB
can/MD
capture/VB
the/DT
common/JJ
data/NNS
characteristics/NNS
among/IN
related/JJ
sequences/NNS
./.
====================
Biologists/NNS
are/VBP
interested/VBN
in/IN
finding/NN
frequent/JJ
orderly/RB
arrangements/NNS
of/IN
motifs/NNS
that/WDT
are/VBP
responsible/JJ
for/IN
similar/JJ
expression/NN
of/IN
a/DT
group/NN
of/IN
genes/NNS
./.
====================
In/IN
order/NN
to/TO
reduce/VB
mining/JJ
time/NN
and/CC
complexity/NN
,/,
however/RB
,/,
most/JJS
existing/VBG
sequence/NN
mining/VBG
algorithms/NNS
either/CC
focus/NN
on/IN
finding/NN
short/JJ
DNA/NN
sequences/NNS
or/CC
require/VB
explicit/VBP
specification/NN
of/IN
sequence/NN
lengths/NNS
in/IN
advance/NN
./.
====================
The/DT
challenge/NN
is/VBZ
to/TO
find/VB
longer/RBR
sequences/NNS
without/IN
specifying/VBG
sequence/NN
lengths/NNS
in/IN
advance/NN
./.
====================
In/IN
this/DT
paper/NN
,/,
we/PRP
propose/VBP
an/DT
efficient/JJ
approach/NN
to/TO
mining/JJ
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
from/IN
large/JJ
DNA/NN
sequence/NN
datasets/NNS
./.
====================
The/DT
experimental/JJ
results/NNS
show/VBP
that/IN
our/PRP$
proposed/JJ
approach/NN
is/VBZ
memory-efficient/JJ
and/CC
mines/NNS
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
within/IN
a/DT
reasonable/JJ
time/NN
./.
====================
Mining/VBG
patterns/NNS
from/IN
DNA/NN
sequences/NNS
refers/VBZ
to/TO
the/DT
task/NN
of/IN
discovering/VBG
sequences/NNS
that/WDT
are/VBP
similar/JJ
or/CC
identical/JJ
between/IN
different/JJ
genomic/JJ
locations/NNS
or/CC
different/JJ
genomes/NNS
./.
====================
How/RB
to/TO
efficiently/RB
discover/RB
long/JJ
frequent/JJ
contiguous/JJ
sequences/NNS
poses/VBZ
a/DT
great/JJ
challenge/NN
for/IN
existing/VBG
sequential/JJ
pattern/NN
mining/VBG
algorithms/NNS
./.
====================
The/DT
problem/NN
of/IN
finding/NN
the/DT
maximal/JJ
contiguous/JJ
frequent/JJ
pattern/NN
is/VBZ
important/JJ
in/IN
bioinformatics/NNS
and/CC
has/VBZ
been/VBN
used/VBN
for/IN
predicting/VBG
biological/JJ
functions/NNS
held/RB
in/IN
genomic/JJ
sequences/NNS
[/(
1-4/CD
]/)
./.
====================
In/IN
the/DT
beginning/VBG
,/,
the/DT
problem/NN
of/IN
finding/NN
common/JJ
subsequences/NNS
from/IN
sequences/NNS
of/IN
more/RBR
than/IN
2/CD
was/VBD
studied/VBN
[/(
1/CD
,/,
2/CD
]/)
;/:
then/RB
,/,
many/JJ
tried/VBN
to/TO
solve/VB
more/RBR
general/JJ
sequential/JJ
pattern/NN
mining/VBG
problems/VBZ
./.
====================
A/DT
typical/JJ
a/DT
priori/JJ
algorithm/NN
,/,
such/JJ
as/IN
Generalized/VBN
Sequential/JJ
Pattern/NN
algorithm/NN
(/(
GSP/NN
)/)
[/(
5/CD
,/,
6/CD
]/)
,/,
adopts/NNS
a/DT
multiple-/JJ
pass/NN
,/,
generation-and-test/JJS
approach/NN
./.
====================
In/IN
one/CD
pass/NN
,/,
all/DT
single/JJ
items/VBZ
(/(
1-sequences/NNS
)/)
are/VBP
counted/VBN
./.
====================
From/IN
the/DT
frequent/JJ
items/NNS
,/,
a/DT
set/NN
of/IN
candidate/NN
2-sequences/NNS
are/VBP
formed/VBN
,/,
and/CC
another/DT
pass/NN
is/VBZ
made/VBN
to/TO
identify/VB
their/PRP$
frequency/NN
./.
====================
The/DT
frequent/JJ
2-sequences/NNS
are/VBP
used/VBN
to/TO
generate/VB
the/DT
candidate/NN
3-sequences/NNS
,/,
and/CC
this/DT
process/NN
is/VBZ
repeated/VBN
until/IN
no/DT
more/RBR
frequent/JJ
sequences/NNS
are/VBP
found/VBN
./.
====================
Normally/RB
,/,
a/DT
hash/JJ
tree-based/VBN
search/VBP
is/VBZ
employed/VBN
for/IN
efficient/JJ
support/VBP
counting/NN
./.
====================
Finally/RB
,/,
non-maximal/JJ
frequent/JJ
sequences/NNS
are/VBP
removed/VBN
./.
====================
Based/VBN
on/IN
this/DT
idea/NN
,/,
a/DT
more/RBR
efficient/JJ
algorithm/NN
,/,
called/VBN
PrefixSpan/NN
[/(
7/CD
]/)
,/,
has/VBZ
been/VBN
proposed/VBN
,/,
which/WDT
examines/VBZ
only/RB
the/DT
prefix/JJ
subsequences/NNS
and/CC
projects/NNS
only/RB
their/PRP$
corresponding/JJ
postfix/JJ
subsequences/NNS
into/IN
the/DT
projected/JJ
database/NN
(/(
PDB/NN
)/)
./.
====================
In/IN
each/DT
PDB/NN
,/,
contiguous/JJ
sequences/NNS
are/VBP
grown/VBN
by/IN
exploring/VBG
local/JJ
length-1/NN
frequent/JJ
sequences/NNS
./.
====================
A/DT
memory-based/JJ
pseudo-projection/NN
technique/NN
is/VBZ
developed/VBN
to/TO
reduce/VB
the/DT
cost/JJ
of/IN
projection/NN
and/CC
speed/JJ
up/IN
processing/NN
./.
====================
When/WRB
mining/JJ
long/JJ
frequent/JJ
concatenated/JJ
sequences/NNS
,/,
however/RB
,/,
this/DT
method/NN
becomes/VBZ
inefficient/JJ
in/IN
terms/NNS
of/IN
time/NN
and/CC
space/NN
./.
====================
Therefore/RB
,/,
it/PRP
is/VBZ
impractical/JJ
to/TO
apply/RB
PrefixSpan/NN
to/TO
mine/JJ
long/JJ
contiguous/JJ
sequences/NNS
,/,
like/IN
biological/JJ
datasets/NNS
./.
====================
Pan/NN
et/FW
al/JJ
./.
====================
[/(
8/CD
]/)
proposed/VBN
to/TO
use/VB
a/DT
variable/JJ
length/NN
spanning/VBG
tree/CD
to/TO
mine/JJ
maximal/JJ
concatenated/JJ
frequent/JJ
subsequences/NNS
and/CC
developed/VBD
algorithms/NNS
,/,
called/VBN
MacosFSpan/NN
and/CC
MacosVSpan/NN
,/,
based/VBN
on/IN
the/DT
PrefixSpan/JJ
approach/NN
./.
====================
MacosVSpan/NN
is/VBZ
efficient/JJ
for/IN
mining/JJ
long/JJ
concatenated/JJ
frequent/JJ
sub-sequences/NNS
,/,
whereas/IN
MacosFSpan/NN
has/VBZ
some/DT
limitations/NNS
,/,
because/IN
it/PRP
constructs/NNS
length-4/NN
fixed/JJ
length/NN
candidate/NN
sequences/NNS
first/JJ
and/CC
recursively/RB
mines/NNS
length-5/NN
,/,
length-6/NN
candidate/NN
sequences/NNS
,/,
etc/JJ
./.
====================
This/DT
is/VBZ
very/RB
time/NN
consuming/VBG
,/,
because/IN
in/IN
a/DT
practical/JJ
DNA/NN
sequence/NN
database/NN
,/,
a/DT
sub-sequence/NN
may/MD
occur/VB
multiple/JJ
times/NNS
in/IN
the/DT
same/JJ
sequence/NN
./.
====================
Another/DT
problem/NN
is/VBZ
that/DT
both/CC
MacosVSpan/NN
and/CC
MacosFSpan/NN
use/NN
the/DT
pointer-offset/NN
pair/NN
to/TO
represent/VB
the/DT
suffixes/NNS
inside/NN
the/DT
in-memory/JJ
pseudo/NN
PDB/NN
,/,
which/WDT
is/VBZ
not/RB
enough/IN
to/TO
represent/VB
the/DT
huge/JJ
number/NN
of/IN
suffixes/NNS
in/IN
a/DT
physical/JJ
PDB/NN
./.
====================
Kang/NN
et/FW
al/JJ
./.
====================
[/(
9/CD
]/)
have/VBP
claimed/VBN
that/DT
their/PRP$
algorithm/NN
is/VBZ
more/RBR
efficient/JJ
than/IN
the/DT
MacosVSpan/NN
algorithm/NN
,/,
but/CC
it/PRP
was/VBD
based/VBN
on/IN
MacosFSpan/NN
,/,
which/WDT
needed/VBD
multiple/JJ
scans/NNS
of/IN
the/DT
database/NN
./.
====================
Recently/RB
,/,
Zerin/NN
et/FW
al/JJ
./.
====================
[/(
10/CD
]/)
have/VBP
proposed/VBN
an/DT
indexed-based/VBN
method/NN
to/TO
find/VB
the/DT
frequent/JJ
contiguous/JJ
sequences/NNS
with/IN
single/JJ
database/NN
scanning/NN
./.
====================
This/DT
approach/NN
builds/VBZ
the/DT
fixed-length/NN
spanning/VBG
tree/CD
in/IN
a/DT
way/NN
similar/JJ
to/TO
Kang/JJ
et/FW
al/JJ
./.
====================
[/(
9/CD
]/)
,/,
but/CC
it/PRP
records/VBZ
the/DT
sequence/NN
IDs/NNS
and/CC
starting/VBG
position/NN
of/IN
the/DT
fixed/JJ
length/NN
patterns/NNS
with/IN
frequency/NN
in/IN
the/DT
leaf/NN
node/NN
of/IN
the/DT
tree/JJ
./.
====================
Although/IN
this/DT
approach/NN
shows/VBZ
better/RBR
results/NNS
than/IN
its/PRP$
predecessors/NNS
in/IN
terms/NNS
of/IN
space/NN
,/,
time/NN
complexity/NN
is/VBZ
still/RB
not/RB
acceptable/JJ
./.
====================
A/DT
practical/JJ
DNA/NN
sequence/NN
database/NN
contains/VBZ
a/DT
large/JJ
number/NN
of/IN
sequences/NNS
,/,
where/WRB
a/DT
sub-sequence/NN
may/MD
occur/VB
multiple/JJ
times/NNS
in/IN
the/DT
same/JJ
sequence/NN
./.
====================
Therefore/RB
,/,
we/PRP
envisage/VBP
using/VBG
the/DT
concept/NN
of/IN
the/DT
suffix/JJ
tree/CD
in/IN
terms/NNS
of/IN
the/DT
variable/JJ
length/NN
spanning/VBG
tree/CD
of/IN
Pan/NN
et/FW
al/JJ
./.
====================
[/(
8/CD
]/)
to/TO
have/VB
the/DT
full/JJ
advantages/NNS
of/IN
prefix/JJ
matching/VBG
./.
====================
Another/DT
aspect/NN
to/TO
consider/VB
is/VBZ
the/DT
size/NN
of/IN
real/JJ
DNA/NN
sequence/NN
databases/NNS
,/,
which/WDT
is/VBZ
ever/RB
increasing/VBG
./.
====================
For/IN
the/DT
cases/NNS
where/WRB
a/DT
DNA/NN
sequence/NN
database/NN
can/MD
not/RB
fit/VB
into/IN
the/DT
main/JJ
memory/NN
,/,
disk-based/VBD
mining/JJ
has/VBZ
been/VBN
studied/VBN
,/,
based/VBN
on/IN
partitioning/VBG
[/(
11-14/CD
]/)
./.
====================
Most/JJS
of/IN
these/DT
techniques/NNS
,/,
however/RB
,/,
only/RB
consider/VBP
local/JJ
frequency/NN
counting/NN
,/,
although/IN
many/JJ
frequent/JJ
patterns/NNS
may/MD
look/VB
infrequent/JJ
due/JJ
to/TO
local/JJ
support/VBP
pruning/VBG
./.
====================
In/IN
this/DT
paper/NN
,/,
we/PRP
propose/VBP
a/DT
suffix/JJ
tree-based/VBN
approach/NN
for/IN
maximal/JJ
contiguous/JJ
frequent/JJ
sub-sequence/NN
mining/JJ
from/IN
DNA/NN
sequence/NN
datasets/NNS
by/IN
means/NNS
of/IN
a/DT
variable/JJ
length/NN
spanning/VBG
tree/CD
./.
====================
We/PRP
also/RB
introduce/VBP
a/DT
combined/JJ
main/JJ
memory-/NN
and/CC
disk-based/VBD
approach/NN
for/IN
mining/JJ
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
from/IN
extra/JJ
large/JJ
DNA/NN
sequence/NN
databases/NNS
that/DT
can/MD
not/RB
fit/VB
into/IN
the/DT
main/JJ
memory/NN
./.
====================
Concepts/NNS
and/CC
definitions/NNS
====================
Let/NNP
Î£/NNP
=/JJ
{/CD
A/DT
,/,
C/NN
,/,
G/NN
,/,
T/NN
}/NN
be/VB
a/DT
set/NN
of/IN
DNA/NN
alphabets/NNS
,/,
where/WRB
A/DT
,/,
C/NN
,/,
G/NN
,/,
and/CC
T/NN
are/VBP
called/VBN
DNA/NN
characters/NNS
or/CC
four/CD
bases/NNS
;/:
A/DT
is/VBZ
for/IN
adenine/NN
,/,
C/NN
for/IN
cytosine/JJ
,/,
G/NN
for/IN
guanine/NN
,/,
and/CC
T/NN
for/IN
thiamine/JJ
./.
====================
A/DT
DNA/NN
sequence/NN
S/NN
is/VBZ
an/DT
ordered/VBN
list/NN
of/IN
DNA/NN
alphabets/NNS
./.
====================
S/NN
is/VBZ
denoted/VBN
by/IN
ãc1/NN
,/,
c2/NN
.../:
clã/NN
where/WRB
ci/NNS
â/CD
Î£/NN
and/CC
|S|/NN
denotes/VBZ
the/DT
length/NN
of/IN
sequence/NN
S./NNP
A/DT
sequence/NN
with/IN
length/NN
n/NN
is/VBZ
called/VBN
an/DT
n-sequence/NN
./.
====================
DNA/NN
sequence/NN
database/NN
D/NN
is/VBZ
a/DT
set/NN
of/IN
tuples/NNS
ãSid/JJ
,/,
Sã/NN
where/WRB
Sid/NN
is/VBZ
a/DT
sequence/NN
identifier/VBP
and/CC
S/NN
is/VBZ
the/DT
corresponding/JJ
sequence/NN
./.
====================
A/DT
sequence/NN
Î±/IN
=/JJ
ãa1/NN
,/,
a2/RB
,/,
.../RB
,/,
anã/CC
is/VBZ
called/VBN
a/DT
contiguous/JJ
sub-sequence/RB
of/IN
another/DT
sequence/NN
Î²/IN
=/JJ
ãb1/NN
,/,
b2/RB
,/,
.../RB
,/,
bmã/RB
,/,
and/CC
Î²/IN
is/VBZ
a/DT
contiguous/JJ
super-sequence/IN
of/IN
Î±/DT
,/,
denoted/VBN
as/IN
Î±âÎ²/RB
,/,
if/IN
there/EX
exists/VBZ
integers/VBZ
1/CD
â¤/NN
j1/RB
â¤/NNP
j2/RB
â¤/NNP
.../:
â¤/RB
jn/RB
â¤/NNP
m/NN
and/CC
ji+1/RB
=/JJ
ji/RB
+/CC
1/CD
for/IN
1/CD
â¤/NN
i/LS
â¤/RB
n-1/NN
such/JJ
that/IN
a1/IN
=/JJ
bj1/IN
,/,
a2/RB
=/JJ
bj2/IN
,/,
.../RB
,/,
an/DT
=/JJ
bjn/IN
./.
====================
We/PRP
can/MD
also/RB
say/NN
that/DT
Î±/VBP
is/VBZ
contained/VBN
by/IN
Î²/JJ
./.
====================
In/IN
our/PRP$
paper/NN
,/,
we/PRP
use/VBP
the/DT
term/NN
``/NN
(/(
sub/NN
)/)
-sequence/NN
''/CD
to/TO
describe/VB
a/DT
``/JJ
contiguous/JJ
(/(
sub/NN
)/)
-sequence/NN
''/CD
in/IN
brief/JJ
./.
====================
A/DT
contiguous/JJ
frequent/JJ
sub-sequence/NN
X/NN
is/VBZ
said/VBN
to/TO
be/VB
maximal/JJ
if/IN
none/NN
of/IN
its/PRP$
super-sequences/NNS
Y/NN
is/VBZ
frequent/JJ
./.
====================
Given/IN
a/DT
DNA/NN
sequence/NN
database/NN
D/NN
and/CC
a/DT
minimum/JJ
support/VBP
threshold/JJ
Î´/RB
,/,
the/DT
problem/NN
of/IN
maximal/JJ
contiguous/JJ
frequent/JJ
sub-sequence/NN
mining/JJ
is/VBZ
to/TO
find/VB
the/DT
complete/JJ
set/NN
of/IN
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
from/IN
that/DT
database/NN
./.
====================
For/IN
example/NN
,/,
let/NN
our/PRP$
running/JJ
DNA/NN
sequence/NN
database/NN
be/VB
D/NN
in/IN
Table/JJ
1/CD
,/,
and/CC
the/DT
minimum/JJ
support/VBP
threshold/JJ
Î´/RB
â¥/CD
2/CD
./.
====================
Sequence/NN
ãATCGTGACTã/NN
is/VBZ
9-sequence/JJ
since/IN
its/PRP$
length/NN
is/VBZ
9/CD
./.
====================
Sequence/NN
ãATCGã/NN
is/VBZ
a/DT
contiguous/JJ
frequent/JJ
sub-sequence/NN
because/IN
it/PRP
is/VBZ
contained/VBN
by/IN
sequences/NNS
10/CD
,/,
20/CD
,/,
and/CC
30/CD
./.
====================
S/NN
=/JJ
ãCGTGATTã/CD
is/VBZ
a/DT
frequent/JJ
contiguous/JJ
sub-sequence/NN
of/IN
length/NN
7/CD
since/IN
both/CC
sequences/NNS
40/CD
and/CC
50/CD
contain/VBP
it/PRP
./.
====================
Moreover/RB
,/,
it/PRP
is/VBZ
one/CD
of/IN
the/DT
maximal/JJ
frequent/JJ
contiguous/JJ
sub-sequences/NNS
,/,
because/IN
there/EX
is/VBZ
no/DT
contiguous/JJ
frequent/JJ
super-sequence/NN
of/IN
ãCGTGATTã/NN
with/IN
a/DT
minimum/JJ
support/VBP
of/IN
2/CD
./.
====================
Definition/NN
(/(
Projection/NN
)/)
====================
Let/NN
a/DT
sequence/NN
S/NN
=/JJ
(/(
Î±/LS
+/JJ
Î²/NN
)/)
;/:
then/RB
,/,
Î±/RB
is/VBZ
a/DT
prefix/JJ
of/IN
S/NN
and/CC
Î²/FW
is/VBZ
called/VBN
a/DT
projection/NN
of/IN
S/NN
w.r.t/JJ
./.
====================
prefix/JJ
Î±/NN
./.
====================
Definition/NN
(/(
Projected/JJ
database/NN
)/)
====================
Let/NN
Î±/RB
be/VB
a/DT
frequent/JJ
contiguous/JJ
sequence/NN
in/IN
a/DT
sequence/NN
database/NN
S./NNP
Then/RB
,/,
Î±-PDB/NN
is/VBZ
the/DT
collection/NN
of/IN
postfixes/NNS
of/IN
sequences/NNS
in/IN
S/NN
,/,
w.r.t/RB
./.
====================
prefix/JJ
Î±/NN
./.
====================
For/IN
the/DT
database/NN
in/IN
Table/JJ
1/CD
,/,
for/IN
example/NN
,/,
ãCã-PDB/NN
consists/VBZ
of/IN
eight/CD
postfix/JJ
sub-sequences/NNS
:/:
ãGTGACTã/CD
,/,
ãTã/NNP
,/,
ãATCGTTã/NNP
,/,
ãGTTã/NNP
,/,
ãATCGTGAGAã/NNP
,/,
ãGTGAAGã/NNP
,/,
ãGTGATTGã/NNP
,/,
and/CC
ãGTGATTã/NN
./.
====================
We/PRP
have/VBP
the/DT
following/VBG
lemma/NN
regarding/VBG
the/DT
PDB/NN
for/IN
the/DT
mining/JJ
of/IN
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
./.
====================
Lemma/NN
(/(
Projected/JJ
database/NN
)/)
====================
Let/NN
D/NN
be/VB
a/DT
DNA/NN
sequence/NN
database/NN
such/JJ
that/IN
Î±/VBP
is/VBZ
prefix/JJ
(/(
s/NNS
)/)
of/IN
the/DT
sequences/NNS
in/IN
the/DT
database/NN
./.
====================
Considering/VBG
the/DT
sub-sequence/NN
and/CC
super-sequence/VBP
relationship/NN
in/IN
terms/NNS
of/IN
contiguity/NN
,/,
the/DT
size/NN
of/IN
Î±-PDB/NN
can/MD
not/RB
exceed/VBN
the/DT
size/NN
of/IN
D/NN
,/,
which/WDT
means/NNS
|DÎ±|/NNP
â¤/CD
|D|/NN
./.
====================
Proof/NN
====================
The/DT
lemma/NN
is/VBZ
regarding/VBG
the/DT
size/NN
of/IN
a/DT
projected/JJ
database/NN
./.
====================
Obviously/RB
,/,
the/DT
Î±-PDB/NN
can/MD
have/VB
same/JJ
suffix/JJ
sequences/NNS
as/IN
the/DT
original/JJ
database/NN
D/NN
only/RB
if/IN
Î±/RB
appears/VBZ
in/IN
every/RB
sequence/NN
in/IN
D./NNP
Otherwise/JJ
,/,
if/IN
only/RB
those/DT
suffixes/NNS
in/IN
D/NN
that/IN
are/VBP
super-sequences/VBZ
of/IN
Î±/DT
will/MD
appear/VBP
in/IN
the/DT
Î±-PDB/NN
,/,
then/RB
Î±-PDB/RB
can/MD
not/RB
contain/VB
more/RBR
sequences/NNS
than/IN
D./NNP
For/IN
every/RB
sequence/NN
Î³/IN
in/IN
D/NN
such/JJ
that/IN
Î³/RB
is/VBZ
a/DT
super-sequence/NN
of/IN
Î±/DT
,/,
Î³/RB
appears/VBZ
in/IN
the/DT
Î±-PDB/NN
in/IN
whole/JJ
only/RB
if/IN
Î±/RB
is/VBZ
a/DT
prefix/JJ
of/IN
Î³/DT
./.
====================
Otherwise/JJ
,/,
only/RB
a/DT
sub-sequence/NN
of/IN
Î³/JJ
appears/VBZ
in/IN
the/DT
Î±-PDB/NN
./.
====================
Therefore/RB
,/,
the/DT
size/NN
of/IN
Î±-PDB/NN
can/MD
not/RB
exceed/VBN
the/DT
size/NN
of/IN
D/NN
./.
====================
For/IN
example/NN
,/,
if/IN
we/PRP
consider/VBP
the/DT
ãAã-PDB/NN
from/IN
the/DT
example/NN
database/NN
,/,
it/PRP
contains/VBZ
9/CD
suffixes/NNS
:/:
TCGTGACT/NN
,/,
CT/NN
,/,
TCGATTG/NN
,/,
TTG/NN
,/,
TCGTGAGA/NN
,/,
GA/NN
,/,
TTG/NN
,/,
TTACT/NN
,/,
and/CC
CT/NN
./.
====================
So/RB
,/,
can/MD
we/PRP
see/VBP
that/DT
the/DT
suffixes/NNS
CT/NN
,/,
TTG/NN
,/,
and/CC
GA/NN
sub-sequences/NNS
among/IN
the/DT
suffixes/NNS
./.
====================
So/RB
,/,
in/IN
terms/NNS
of/IN
contiguity/NN
,/,
TCGTGACT/NN
,/,
TCGATTG/NN
,/,
TCGTGAGA/NN
,/,
and/CC
TTACT/NN
are/VBP
the/DT
super-sequences/NNS
./.
====================
Therefore/RB
,/,
ãAã-PDB/NN
contains/VBZ
only/RB
four/CD
suffixes/NNS
./.
====================
So/RB
,/,
the/DT
size/NN
of/IN
the/DT
PDB/NN
can/MD
not/RB
exceed/VBN
the/DT
size/NN
of/IN
original/JJ
database/NN
./.
====================
This/DT
claims/NNS
that/DT
any/DT
PDB/NN
created/VBD
from/IN
a/DT
database/NN
that/DT
fits/VBZ
into/IN
the/DT
main/JJ
memory/NN
will/MD
certainly/RB
be/VB
fitted/VBN
into/IN
the/DT
main/JJ
memory/NN
./.
====================
Maximal/JJ
contiguous/JJ
frequent/JJ
suffix/JJ
tree/CD
algorithm/NN
====================
We/PRP
describe/VBP
our/PRP$
algorithm/NN
,/,
called/VBN
Maximal/JJ
Contiguous/JJ
Frequent/JJ
Suffix/NN
tree/CD
algorithm/NN
(/(
MCFS/NN
)/)
,/,
to/TO
discover/JJ
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
from/IN
DNA/NN
sequence/NN
datasets/NNS
./.
====================
Let/NN
us/PRP
assume/NN
for/IN
now/RB
that/WDT
the/DT
DNA/NN
sequence/NN
database/NN
can/MD
be/VB
fit/CD
into/IN
the/DT
main/JJ
memory/NN
./.
====================
The/DT
method/NN
proceeds/VBZ
as/IN
follows/VBZ
:/:
1/CD
)/)
construct/NN
four/CD
projected/VBN
databases/NNS
,/,
namely/RB
ãAã/NNP
,/,
ãTã/NNP
,/,
ãCã/NNP
,/,
and/CC
ãGã/NNP
,/,
to/TO
mine/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
;/:
2/CD
)/)
insert/RB
the/DT
suffixes/NNS
of/IN
PDBs/NN
into/IN
a/DT
suffix/JJ
tree/CD
;/:
3/LS
)/)
traverse/JJ
the/DT
whole/JJ
suffix/JJ
tree/CD
and/CC
find/VBP
the/DT
set/NN
of/IN
frequent/JJ
contiguous/JJ
patterns/NNS
;/:
4/CD
)/)
check/VBP
the/DT
properties/NNS
of/IN
maximality/JJ
and/CC
find/VBP
the/DT
set/NN
of/IN
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
./.
====================
In/IN
order/NN
to/TO
efficiently/RB
discover/RB
frequent/JJ
sub-sequences/NNS
,/,
we/PRP
design/VBP
a/DT
suffix/JJ
tree/CD
structure/NN
that/WDT
stores/NNS
all/DT
the/DT
potential/JJ
sub-sequences/NNS
and/CC
their/PRP$
corresponding/JJ
supports/VBZ
./.
====================
A/DT
'potential/JJ
frequent/JJ
sub-sequence/NN
'/``
is/VBZ
a/DT
sub-sequence/NN
that/DT
has/VBZ
at/IN
least/JJS
two/CD
matches/NNS
with/IN
other/JJ
suffixes/NNS
inside/NN
the/DT
PDBs/NN
./.
====================
Each/DT
PDB/NN
has/VBZ
its/PRP$
own/JJ
corresponding/JJ
sub-tree/JJ
,/,
defined/VBN
as/IN
follows/VBZ
./.
====================
The/DT
root/NN
of/IN
the/DT
tree/NN
is/VBZ
the/DT
entry/NN
point/NN
./.
====================
Each/DT
node/NN
consists/VBZ
of/IN
three/CD
fields/NNS
:/:
item/PRP
,/,
support/VBP
,/,
and/CC
link/NN
to/TO
the/DT
next/JJ
node/NN
./.
====================
Item/NN
registers/NNS
which/WDT
item/VBP
this/DT
node/NN
represents/VBZ
./.
====================
Concatenation/NN
of/IN
all/DT
items/VBZ
along/IN
the/DT
path/NN
from/IN
the/DT
root/NN
to/TO
this/DT
node/NN
represents/VBZ
a/DT
sub-sequence/NN
./.
====================
Support/NN
registers/NNS
the/DT
support/NN
of/IN
this/DT
suffix/JJ
sub-sequence/NN
from/IN
the/DT
root/NN
node/NN
to/TO
this/DT
node/NN
./.
====================
This/DT
means/NNS
that/DT
if/IN
we/PRP
traverse/VBP
a/DT
particular/JJ
path/NN
from/IN
top/NN
to/TO
bottom/CC
,/,
then/RB
the/DT
path/NN
from/IN
the/DT
root/NN
to/TO
this/DT
node/NN
represents/VBZ
a/DT
sub-sequence/NN
,/,
and/CC
support/VBP
of/IN
the/DT
last/JJ
node/NN
in/IN
the/DT
path/NN
becomes/VBZ
the/DT
support/NN
of/IN
the/DT
sub-sequence/NN
./.
====================
The/DT
height/JJ
of/IN
the/DT
suffix/JJ
tree/CD
is/VBZ
not/RB
fixed/JJ
,/,
because/IN
the/DT
lengths/NNS
of/IN
the/DT
suffixes/NNS
are/VBP
variable/JJ
./.
====================
Our/PRP$
proposed/JJ
algorithm/NN
(/(
Fig/NN
./.
====================
1/CD
)/)
proceeds/VBZ
in/IN
three/CD
steps/NNS
./.
====================
The/DT
first/JJ
step/NN
scans/NNS
the/DT
original/JJ
database/NN
and/CC
constructs/NNS
four/CD
PDBs/NNS
./.
====================
While/IN
creating/VBG
PDBs/NN
of/IN
A/DT
,/,
T/NN
,/,
C/NN
,/,
and/CC
G/NN
,/,
a/DT
register/JJ
is/VBZ
maintained/VBN
that/DT
checks/VBZ
for/IN
duplicate/JJ
suffixes/NNS
without/IN
sorting/NN
the/DT
suffixes/NNS
./.
====================
If/IN
a/DT
suffix/JJ
appears/VBZ
more/RBR
than/IN
once/RB
in/IN
a/DT
PDB/NN
,/,
the/DT
suffix/JJ
is/VBZ
inserted/VBN
into/IN
a/DT
temporary/JJ
buffer/NN
with/IN
support/VBP
./.
====================
If/IN
a/DT
suffix/JJ
X/NN
has/VBZ
n/NN
replicas/VBZ
in/IN
Î±-PDBs/NNS
,/,
for/IN
example/NN
,/,
we/PRP
move/VBP
X/NN
to/TO
the/DT
temporary/JJ
buffer/NN
with/IN
support/VBP
n./JJ
This/DT
kind/NN
of/IN
suffix/JJ
uses/VBZ
very/RB
little/JJ
space/NN
and/CC
thus/RB
can/MD
be/VB
stored/VBN
in/IN
the/DT
memory/NN
./.
====================
Then/RB
,/,
we/PRP
check/VBP
the/DT
suffixes/NNS
and/CC
merge/JJ
the/DT
sub-sequence/NN
suffixes/NNS
with/IN
super/JJ
sequence/NN
suffixes/NNS
according/VBG
to/TO
lemma/NN
1/CD
./.
====================
In/IN
this/DT
way/NN
,/,
the/DT
size/NN
of/IN
physical/JJ
PDB/NN
does/VBZ
not/RB
exceed/VBN
the/DT
size/NN
of/IN
the/DT
original/JJ
database/NN
./.
====================
Inside/RB
the/DT
PDBs/NN
,/,
we/PRP
do/VBP
not/RB
register/VB
the/DT
value/NN
of/IN
sequence/NN
ID/NN
or/CC
offset/IN
,/,
because/IN
we/PRP
can/MD
directly/RB
insert/NN
suffixes/NNS
into/IN
the/DT
suffix/JJ
tree/CD
./.
====================
The/DT
second/JJ
step/NN
creates/VBZ
and/CC
inserts/NNS
suffixes/NNS
into/IN
suffix/JJ
tree/CD
./.
====================
During/IN
the/DT
insertion/NN
process/NN
,/,
four/CD
situations/NNS
arise/VBP
regarding/VBG
the/DT
maximality/NN
problem/NN
./.
====================
First/RB
,/,
if/IN
the/DT
inserting/JJ
sequence/NN
is/VBZ
contained/VBN
by/IN
some/DT
suffixes/NNS
in/IN
the/DT
PDBs/NN
,/,
it/PRP
will/MD
match/VBP
a/DT
branch/NN
of/IN
the/DT
suffix/JJ
tree/CD
;/:
then/RB
,/,
we/PRP
delete/VBP
it/PRP
from/IN
the/DT
result/NN
set/NN
and/CC
increase/VBP
support/VBP
up/IN
to/TO
the/DT
matching/VBG
point/NN
to/TO
stop/VB
inserting/VBG
./.
====================
Second/RB
,/,
if/IN
the/DT
inserted/JJ
sequence/NN
contains/VBZ
some/DT
sequence/NN
in/IN
the/DT
tree/JJ
,/,
denoted/VBN
as/IN
Î±/RB
,/,
one/CD
of/IN
its/PRP$
suffixes/NNS
will/MD
match/VBP
the/DT
branch/NN
representing/VBG
Î±/RB
;/:
then/RB
,/,
we/PRP
increase/VBP
the/DT
support/NN
of/IN
Î±/JJ
and/CC
delete/JJ
it/PRP
from/IN
the/DT
result/NN
set/NN
and/CC
continue/VB
to/TO
insert/VB
other/JJ
suffixes/NNS
./.
====================
Third/RB
,/,
if/IN
there/EX
exists/VBZ
a/DT
suffix/JJ
totally/RB
matching/VBG
a/DT
prefix/JJ
,/,
say/NN
Î±/RB
of/IN
a/DT
PDB/NN
,/,
we/PRP
continue/VBP
to/TO
find/VB
the/DT
longest/JJS
subsequence/NN
Î²/RB
following/VBG
Î±/JJ
in/IN
S/NN
,/,
which/WDT
matches/VBZ
a/DT
root-path/NN
in/IN
Î±-subtree/JJ
./.
====================
Fourth/DT
,/,
if/IN
there/EX
exists/VBZ
a/DT
suffix/JJ
Î±/RB
that/DT
partly/RB
matches/NNS
a/DT
prefix/JJ
,/,
we/PRP
merge/VBP
it/PRP
with/IN
the/DT
suffix/JJ
and/CC
increase/VBP
the/DT
corresponding/JJ
support/VBP
up/IN
to/TO
the/DT
matching/VBG
point/NN
./.
====================
Otherwise/JJ
,/,
we/PRP
just/RB
insert/NN
it/PRP
into/IN
the/DT
suffix/JJ
tree/CD
as/IN
a/DT
new/JJ
path/NN
./.
====================
If/IN
a/DT
suffix/JJ
has/VBZ
no/DT
matches/NNS
with/IN
other/JJ
suffixes/NNS
inside/NN
a/DT
PDB/NN
,/,
we/PRP
just/RB
discard/JJ
the/DT
suffix/JJ
after/IN
the/DT
traversing/VBG
./.
====================
The/DT
third/JJ
step/NN
scans/NNS
the/DT
suffix/JJ
tree/CD
and/CC
finds/NNS
the/DT
set/NN
of/IN
all/DT
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
./.
====================
It/PRP
first/JJ
finds/NNS
the/DT
set/NN
of/IN
contiguous/JJ
frequent/JJ
sub-sequences/NNS
and/CC
then/RB
finds/NNS
the/DT
set/NN
of/IN
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
by/IN
checking/VBG
the/DT
properties/NNS
of/IN
maximality/NN
./.
====================
An/DT
illustrative/JJ
example/NN
====================
Let/NN
us/PRP
demonstrate/VBP
the/DT
MCFS/NN
algorithm/NN
using/VBG
the/DT
database/NN
of/IN
Table/JJ
1/CD
./.
====================
ãAã-PDB/NN
contains/VBZ
only/RB
super-sequences/VBZ
of/IN
suffixes/NNS
storing/VBG
all/DT
sub-sequences/NNS
physically/RB
./.
====================
According/VBG
to/TO
lemma/NN
1/CD
,/,
ãAã-PDB/NN
contains/VBZ
4/CD
suffixes/NNS
:/:
TCGTGACT/NN
,/,
TCGATTG/NN
,/,
TCGTGAGA/NN
,/,
and/CC
TTACT/NN
./.
====================
ACT/NN
and/CC
ATTG/NN
will/MD
be/VB
moved/VBN
to/TO
'frequent/JJ
file/JJ
'/``
with/IN
their/PRP$
corresponding/JJ
supports/VBZ
2/CD
./.
====================
The/DT
remaining/VBG
three/CD
projected/VBN
databases/NNS
can/MD
be/VB
constructed/VBN
in/IN
a/DT
similar/JJ
manner/NN
(/(
Table/JJ
2/CD
)/)
./.
====================
Now/RB
,/,
the/DT
suffixes/NNS
are/VBP
inserted/VBN
into/IN
the/DT
suffix/JJ
tree/CD
./.
====================
Fig/NN
./.
====================
2/CD
shows/VBZ
the/DT
suffix/JJ
sub-tree/JJ
that/DT
can/MD
be/VB
traversed/VBN
to/TO
find/VB
the/DT
set/NN
of/IN
contiguous/JJ
frequent/JJ
patterns/NNS
./.
====================
The/DT
figure/NN
illustrates/VBZ
the/DT
mining/JJ
technique/NN
of/IN
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
from/IN
A-subtree/JJ
./.
====================
Mining/VBG
from/IN
T/NN
,/,
C/NN
,/,
and/CC
G-subtrees/NNS
can/MD
be/VB
done/VBN
in/IN
a/DT
similar/JJ
way/NN
./.
====================
The/DT
traversal/JJ
of/IN
the/DT
suffix/JJ
sub-tree/JJ
proceeds/VBZ
as/IN
follows/VBZ
./.
====================
First/RB
,/,
we/PRP
visit/VBP
the/DT
paths/NNS
from/IN
root/NN
to/TO
every/DT
descending/VBG
node/NN
,/,
and/CC
we/PRP
write/VBP
the/DT
frequent/JJ
contiguous/JJ
sub-sequences/NNS
in/IN
the/DT
frequent/JJ
file/JJ
./.
====================
Table/JJ
3/CD
shows/VBZ
the/DT
content/NN
of/IN
the/DT
frequent/JJ
file/JJ
with/IN
corresponding/JJ
supports/VBZ
./.
====================
The/DT
frequent/JJ
file/JJ
previously/RB
contained/VBD
four/CD
frequent/JJ
contiguous/JJ
sub-sequences/NNS
with/IN
their/PRP$
support/VBP
,/,
which/WDT
are/VBP
ATTG/NN
(/(
2/CD
)/)
,/,
ACT/NN
(/(
2/CD
)/)
,/,
CT/NN
(/(
2/CD
)/)
,/,
and/CC
GATTG/NN
(/(
2/CD
)/)
./.
====================
After/IN
the/DT
final/JJ
traversal/JJ
on/IN
the/DT
sub-trees/NNS
,/,
the/DT
contents/NNS
of/IN
the/DT
frequent/JJ
file/JJ
will/MD
be/VB
updated/VBN
./.
====================
Now/RB
,/,
we/PRP
scan/VBP
the/DT
'frequent/JJ
file/JJ
'/``
presented/VBN
by/IN
Table/JJ
3/CD
and/CC
check/NN
if/IN
the/DT
maximality/NN
criteria/NNS
are/VBP
met/JJ
./.
====================
Finally/RB
,/,
we/PRP
have/VBP
five/CD
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
written/CD
into/IN
the/DT
output/NN
file/JJ
(/(
Table/JJ
4/CD
)/)
./.
====================
MCFS/NN
algorithm/NN
on/IN
extra/JJ
large/JJ
DNA/NN
sequence/NN
database/NN
====================
When/WRB
a/DT
DNA/NN
sequence/NN
database/NN
is/VBZ
too/RB
large/JJ
(/(
e.g./FW
,/,
100/CD
GB/NN
or/CC
more/RBR
)/)
to/TO
fit/VB
into/IN
the/DT
memory/NN
,/,
we/PRP
have/VBP
to/TO
store/VB
it/PRP
on/IN
a/DT
disk/NN
./.
====================
In/IN
this/DT
case/NN
,/,
different/JJ
mining/JJ
techniques/NNS
are/VBP
needed/VBN
,/,
and/CC
partitioning/VBG
is/VBZ
one/CD
such/JJ
technique/NN
./.
====================
Most/JJS
disk-based/VBN
partitioning/VBG
techniques/NNS
[/(
11-14/CD
]/)
find/VBP
frequent/JJ
patterns/NNS
from/IN
each/DT
partition/NN
and/CC
check/NN
to/TO
discover/JJ
all/DT
frequent/JJ
patterns/NNS
./.
====================
This/DT
approach/NN
,/,
however/RB
,/,
has/VBZ
some/DT
drawbacks/NNS
,/,
because/IN
frequent/JJ
patterns/NNS
may/MD
look/VB
infrequent/JJ
due/JJ
to/TO
local/JJ
support/VBP
pruning/VBG
./.
====================
Suppose/NN
our/PRP$
database/NN
is/VBZ
partitioned/VBN
into/IN
two/CD
parts/NNS
,/,
D1/NN
and/CC
D2/NN
./.
====================
Sequences/NNS
10/CD
,/,
20/CD
,/,
and/CC
30/CD
are/VBP
in/IN
D1/NN
,/,
and/CC
40/CD
and/CC
50/CD
are/VBP
in/IN
D2/NN
./.
====================
Suffix/NN
ACT/NN
occurs/VBZ
once/RB
in/IN
D1/NN
,/,
so/RB
it/PRP
is/VBZ
not/RB
frequent/JJ
./.
====================
According/VBG
to/TO
them/PRP
[/(
12/CD
,/,
13/CD
]/)
,/,
we/PRP
have/VBP
to/TO
discard/JJ
it/PRP
for/IN
local/JJ
support/VBP
pruning/VBG
./.
====================
Another/DT
copy/NN
of/IN
ACT/NN
is/VBZ
in/IN
D2/NN
(/(
ID-50/NN
)/)
,/,
so/RB
we/PRP
discard/VBD
it/PRP
from/IN
the/DT
partition/NN
as/IN
well/RB
./.
====================
If/IN
we/PRP
consider/VBP
globally/RB
,/,
then/RB
ACT/NN
will/MD
be/VB
a/DT
frequent/JJ
pattern/NN
,/,
if/IN
the/DT
minimum/JJ
support/VBP
threshold/JJ
is/VBZ
2/CD
./.
====================
In/IN
this/DT
way/NN
,/,
many/JJ
frequent/JJ
patterns/NNS
can/MD
be/VB
lost/VBN
by/IN
partitioning/VBG
./.
====================
In/IN
order/NN
to/TO
deal/JJ
with/IN
this/DT
problem/NN
,/,
we/PRP
propose/VBP
a/DT
technique/NN
using/VBG
a/DT
combined/JJ
approach/NN
of/IN
main/JJ
memory/NN
and/CC
disk/NN
partitioning/VBG
./.
====================
During/IN
the/DT
first/JJ
scanning/NN
over/IN
the/DT
database/NN
,/,
we/PRP
partition/NN
the/DT
original/JJ
database/NN
residing/VBG
in/IN
the/DT
disk/NN
into/IN
smaller/JJR
parts/NNS
so/RB
that/IN
each/DT
part/NN
can/MD
fit/VB
into/IN
the/DT
memory/NN
./.
====================
In/IN
this/DT
process/NN
,/,
the/DT
number/NN
of/IN
partitions/NNS
should/MD
be/VB
minimized/VBN
by/IN
reading/VBG
as/IN
many/JJ
DNA/NN
sequences/NNS
into/IN
the/DT
memory/NN
as/IN
possible/JJ
to/TO
constitute/VB
one/CD
partition/NN
./.
====================
The/DT
set/NN
of/IN
frequent/JJ
patterns/NNS
in/IN
D/NN
is/VBZ
obtained/VBN
by/IN
collecting/VBG
the/DT
discovered/JJ
patterns/NNS
after/IN
running/VBG
MCFS/NN
on/IN
these/DT
partitions/NNS
./.
====================
The/DT
actual/JJ
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
can/MD
be/VB
identified/VBN
with/IN
only/RB
one/CD
extra/JJ
database/NN
pass/NN
through/IN
support/VBP
counting/NN
against/IN
all/DT
the/DT
data/NNS
sequences/NNS
in/IN
each/DT
partition/NN
,/,
one/CD
at/IN
a/DT
time/NN
./.
====================
Therefore/RB
,/,
we/PRP
can/MD
employ/VB
MCFS/NN
to/TO
mine/JJ
databases/NNS
of/IN
any/DT
size/NN
,/,
with/IN
any/DT
minimum/JJ
support/VBP
,/,
in/IN
just/RB
two/CD
passes/NNS
of/IN
database/NN
scanning/NN
-/:
one/CD
for/IN
the/DT
original/JJ
database/NN
and/CC
one/CD
for/IN
the/DT
portioned/JJ
databases/NNS
./.
====================
Firstly/RB
,/,
store/RB
every/RB
frequent/JJ
pattern/NN
into/IN
a/DT
temporary/JJ
buffer/NN
storage/NN
,/,
namely/RB
'frequent/JJ
file/JJ
,/,
'/``
with/IN
their/PRP$
corresponding/JJ
support/VBP
,/,
and/CC
infrequent/JJ
patterns/NNS
into/IN
temporary/JJ
buffer/NN
storage/NN
,/,
namely/RB
'output/NN
file/JJ
,/,
'/``
with/IN
their/PRP$
corresponding/JJ
support/VBP
as/IN
well/RB
./.
====================
After/IN
that/DT
,/,
we/PRP
collect/VBP
all/DT
the/DT
infrequent/JJ
patterns/NNS
from/IN
each/DT
partition/NN
and/CC
combine/VBP
them/PRP
to/TO
count/VB
the/DT
corresponding/JJ
support/VBP
of/IN
each/DT
infrequent/JJ
pattern/NN
./.
====================
The/DT
main/JJ
goal/NN
of/IN
this/DT
approach/NN
is/VBZ
to/TO
process/NN
one/CD
partition/NN
in/IN
the/DT
memory/NN
at/IN
a/DT
time/NN
to/TO
avoid/VB
multiple/JJ
scans/NNS
over/IN
D/NN
from/IN
the/DT
secondary/JJ
storage/NN
./.
====================
Fig/NN
./.
====================
3/CD
indicates/VBZ
the/DT
technique/NN
of/IN
mining/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
from/IN
disk-based/JJ
extra/JJ
large/JJ
database/NN
./.
====================
In/IN
the/DT
figure/NN
,/,
D1/NN
,/,
D2/NN
,/,
.../:
,/,
Dn/NN
are/VBP
the/DT
partitions/NNS
of/IN
the/DT
original/JJ
database/NN
./.
====================
Fi/RB
is/VBZ
the/DT
contiguous/JJ
frequent/JJ
patterns/NNS
,/,
and/CC
IFi/NN
is/VBZ
the/DT
infrequent/JJ
contiguous/JJ
patterns/NNS
from/IN
each/DT
partition/NN
./.
====================
CFP/NN
is/VBZ
contiguous/JJ
frequent/JJ
patterns/NNS
,/,
and/CC
MCFPi/NN
is/VBZ
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
./.
====================
Fi/RB
,/,
IFi/NNP
,/,
CFP/NN
,/,
and/CC
MCFPi/NN
are/VBP
all/DT
stored/JJ
on/IN
the/DT
disk/NN
./.
====================
We/PRP
compare/VBP
the/DT
performance/NN
of/IN
our/PRP$
MCFS/NN
algorithm/NN
with/IN
MacosVSpan/NN
for/IN
mining/JJ
maximal/JJ
contiguous/JJ
frequent/JJ
sub-sequences/NNS
./.
====================
In/IN
this/DT
comparison/NN
,/,
we/PRP
only/RB
consider/VBP
the/DT
memory-based/JJ
approach/NN
,/,
as/IN
done/VBN
by/IN
most/JJS
existing/VBG
works/NNS
./.
====================
All/DT
programs/NNS
were/VBD
written/RB
and/CC
compiled/VBD
using/VBG
Microsoft/JJ
Visual/JJ
C++/JJ
6.0/CD
,/,
run/JJ
with/IN
Microsoft/JJ
Windows/VBZ
XP/NN
with/IN
a/DT
Pentium/NN
Duel/JJ
Core/NN
2.13/CD
GHz/NN
CPU/NN
with/IN
4/CD
GB/NN
of/IN
main/JJ
memory/NN
and/CC
500/CD
GB/NN
hard/VBP
disk/NN
./.
====================
As/IN
for/IN
practical/JJ
DNA/NN
sequence/NN
databases/NNS
,/,
'Human/JJ
genome/NN
'/``
(/(
Homo/NN
sapiens/NNS
GRCh37.64/NN
DNA/NN
Chromosome/NN
Part/NN
1/CD
,/,
2/CD
,/,
3/CD
)/)
and/CC
'Bacteria/FW
DNA/NN
sequence/NN
dataset/NN
'/``
were/VBD
downloaded/VBN
from/IN
the/DT
NCBI/NN
website/JJ
(/(
http/NN
:/:
//www.ncbi.nlm.nih.gov/nuccore//JJ
)/)
./.
====================
The/DT
human/JJ
genome/NN
database/NN
contains/VBZ
112,000/CD
sequences/NNS
,/,
with/IN
sequence/NN
length/NN
60/CD
./.
====================
The/DT
bacteria/NNS
dataset/NN
consists/VBZ
of/IN
20,000/CD
sequences/NNS
,/,
with/IN
sequence/NN
length/NN
1,040/CD
./.
====================
As/IN
for/IN
validating/VBG
the/DT
combined/JJ
memory-disk/NN
based/VBN
approach/NN
,/,
we/PRP
aim/VBP
to/TO
show/VB
only/RB
the/DT
run-time/JJ
efficiency/NN
./.
====================
We/PRP
applied/VBD
our/PRP$
main/JJ
memory/NN
disk-based/VBN
mining/JJ
approach/NN
to/TO
Homo/NN
sapiens/NNS
GRCh37.64/NN
DNA/NN
Chromosome/NN
Part/NN
1/CD
,/,
2/CD
,/,
and/CC
3/CD
./.
====================
Part/NN
2/CD
has/VBZ
98,000/CD
sequences/NNS
and/CC
a/DT
length/NN
of/IN
60/CD
,/,
and/CC
part/NN
3/CD
has/VBZ
105,000/CD
sequences/NNS
with/IN
sequence/NN
length/NN
of/IN
60/CD
./.
====================
With/IN
various/JJ
values/NNS
of/IN
minimum/JJ
support/VBP
,/,
we/PRP
compared/VBD
the/DT
run-time/JJ
performance/NN
of/IN
three/CD
approaches/NNS
:/:
MCFS/NN
(/(
our/PRP$
algorithm/NN
)/)
,/,
MacosVSpan/NN
[/(
8/CD
]/)
,/,
and/CC
Latest/JJ
Approach/DT
[/(
9/CD
]/)
./.
====================
Figs/NNS
./.
====================
4/CD
and/CC
5/CD
show/VBP
the/DT
retrieval/JJ
performance/NN
with/IN
respect/NN
to/TO
the/DT
change/NN
of/IN
minimum/JJ
support/VBP
,/,
indicating/VBG
that/IN
MCFS/NN
outperforms/NNS
the/DT
other/JJ
two/CD
./.
====================
We/PRP
also/RB
compared/VBD
the/DT
memory/NN
usage/NN
of/IN
the/DT
three/CD
approaches/NNS
with/IN
various/JJ
values/NNS
of/IN
minimum/JJ
support/VBP
./.
====================
The/DT
search/NN
space/NN
was/VBD
relatively/RB
smaller/JJR
,/,
because/IN
we/PRP
made/VBD
use/NN
of/IN
sub-sequence/NN
and/CC
super-sequence/VBP
relationships/NNS
,/,
and/CC
whenever/IN
reaching/VBG
to/TO
the/DT
minimum/JJ
support/VBP
threshold/JJ
,/,
the/DT
sub-sequence/NN
for/IN
contiguous/JJ
frequent/JJ
patterns/NNS
was/VBD
not/RB
searched/VBN
./.
====================
Figs/NNS
./.
====================
6/CD
and/CC
7/CD
show/VBP
the/DT
memory/NN
usage/NN
,/,
indicating/VBG
that/IN
our/PRP$
approach/NN
shows/VBZ
relatively/RB
low/JJ
memory/NN
usage/NN
compared/VBN
to/TO
the/DT
other/JJ
two/CD
./.
====================
Although/IN
both/DT
MacosVSpan/NN
and/CC
our/PRP$
MCFS/NN
algorithm/NN
process/NN
one/CD
PDB/NN
after/IN
another/DT
and/CC
then/RB
produce/VBP
the/DT
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
by/IN
traversing/VBG
the/DT
suffix/JJ
tree/CD
,/,
the/DT
size/NN
of/IN
the/DT
PDB/NN
can/MD
not/RB
be/VB
larger/RBR
than/IN
the/DT
original/JJ
database/NN
(/(
according/VBG
to/TO
our/PRP$
proposed/JJ
lemma/NN
)/)
;/:
hence/RB
,/,
the/DT
PDBs/NN
can/MD
be/VB
fit/JJ
in/IN
the/DT
memory/NN
./.
====================
This/DT
is/VBZ
why/WRB
MCFS/NN
consumes/VBZ
much/RB
less/RBR
memory/NN
compared/VBN
to/TO
MacosVSpan/NN
./.
====================
The/DT
Latest/JJ
Approach/NN
[/(
9/CD
]/)
requires/VBZ
slightly/RB
larger/JJR
memory/NN
,/,
because/IN
it/PRP
constructs/NNS
the/DT
spanning/NN
tree/CD
by/IN
processing/NN
all/DT
of/IN
them/PRP
at/IN
once/RB
./.
====================
It/PRP
does/VBZ
not/RB
consider/VB
the/DT
memory/NN
usage/NN
while/IN
creating/VBG
and/CC
producing/VBG
the/DT
fixed-length/NN
spanning/VBG
tree/CD
./.
====================
Since/IN
it/PRP
first/JJ
constructs/NNS
the/DT
fixed-length/JJ
spanning/VBG
tree/CD
and/CC
then/RB
expands/VBZ
these/DT
candidate/NN
item/NN
sets/NNS
to/TO
generate/VB
longer/RBR
length/NN
candidate/NN
item/NN
sets/NNS
,/,
it/PRP
is/VBZ
not/RB
guaranteed/JJ
to/TO
be/VB
fit/JJ
in/IN
the/DT
memory/NN
./.
====================
Finally/RB
,/,
we/PRP
validate/VBP
our/PRP$
combined/JJ
memory/NN
disk-based/VBN
approach/NN
by/IN
applying/VBG
it/PRP
to/TO
Homo/NN
sapiens/NNS
GRCh37.64/NN
DNA/NN
Chromosome/NN
Parts/NNS
1/CD
,/,
2/CD
,/,
and/CC
3/CD
./.
====================
We/PRP
assume/VBP
that/DT
Parts/NNS
1/CD
,/,
2/CD
,/,
and/CC
3/CD
are/VBP
partitioned/VBN
and/CC
stored/VBD
on/IN
the/DT
disk/NN
./.
====================
With/IN
various/JJ
settings/NNS
of/IN
minimum/JJ
support/VBP
threshold/JJ
,/,
we/PRP
measured/VBD
the/DT
run-time/JJ
performance/NN
(/(
Fig/NN
./.
====================
8/CD
)/)
./.
====================
In/IN
this/DT
paper/NN
,/,
we/PRP
have/VBP
proposed/VBN
an/DT
efficient/JJ
algorithm/NN
,/,
called/VBN
MCFS/NN
,/,
for/IN
mining/JJ
maximal/JJ
contiguous/JJ
frequent/JJ
sub-sequences/NNS
,/,
which/WDT
requires/VBZ
only/RB
one/CD
scan/NN
of/IN
the/DT
original/JJ
DNA/NN
sequence/NN
database/NN
./.
====================
The/DT
proposed/JJ
algorithm/NN
has/VBZ
the/DT
following/VBG
characteristics/NNS
./.
====================
First/RB
,/,
it/PRP
can/MD
accept/VB
any/DT
value/NN
of/IN
the/DT
minimum/JJ
support/VBP
threshold/JJ
effectively/RB
by/IN
means/NNS
of/IN
one-time/JJ
database/NN
access/VBP
and/CC
construction/NN
of/IN
a/DT
suffix/JJ
tree/CD
./.
====================
Second/RB
,/,
it/PRP
can/MD
effectively/RB
mine/JJ
the/DT
complete/JJ
set/NN
of/IN
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
without/IN
specifying/VBG
the/DT
sequence/NN
lengths/NNS
in/IN
advance/NN
./.
====================
Third/RB
,/,
the/DT
proposed/JJ
method/NN
can/MD
produce/VB
results/NNS
only/RB
by/IN
tree/CD
search/VBP
,/,
without/IN
expansion/NN
for/IN
production/NN
of/IN
a/DT
candidate/NN
set/NN
./.
====================
Fourth/DT
,/,
from/IN
the/DT
experimental/JJ
results/NNS
,/,
we/PRP
can/MD
see/VB
the/DT
scalability/NN
of/IN
our/PRP$
approach/NN
./.
====================
As/IN
a/DT
result/NN
,/,
it/PRP
can/MD
be/VB
applied/VBN
not/RB
only/RB
to/TO
a/DT
DNA/NN
sequence/NN
with/IN
a/DT
small/JJ
number/NN
of/IN
items/NNS
(/(
dimension/NN
)/)
but/CC
also/RB
amino/NN
acid/NN
sequences/NNS
with/IN
a/DT
large/JJ
number/NN
of/IN
items/NNS
whose/WP$
sizes/NNS
can/MD
be/VB
very/RB
large/JJ
and/CC
other/JJ
multi-dimensional/JJ
sequence/NN
datasets/NNS
./.
====================
Our/PRP$
experiments/NNS
show/VBP
that/IN
MCFS/NN
outperforms/NNS
other/JJ
existing/VBG
approaches/NNS
for/IN
mining/JJ
maximal/JJ
contiguous/JJ
sub-sequences/NNS
./.
====================
In/IN
the/DT
future/JJ
,/,
we/PRP
intend/VBP
to/TO
extend/VB
this/DT
work/NN
to/TO
include/VB
gaps/VBZ
and/CC
execute/VBP
it/PRP
on/IN
real/JJ
biological/JJ
datasets/NNS
./.
====================
The/DT
MCFS/NN
algorithm/NN
./.
====================
MCFS/NN
,/,
Maximal/JJ
Contiguous/JJ
Frequent/JJ
Suffix/NN
tree/CD
algorithm/NN
;/:
PDB/NN
,/,
projected/VBN
database/NN
./.
====================
Complete/JJ
A-subtree/JJ
./.
====================
Partitioning/NN
approach/NN
to/TO
discover/JJ
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
for/IN
extra-large/JJ
databases/NNS
./.
====================
MCFS/NN
,/,
Maximal/JJ
Contiguous/JJ
Frequent/JJ
Suffix/NN
tree/CD
algorithm/NN
;/:
MCFPi/NN
,/,
maximal/JJ
contiguous/JJ
frequent/JJ
patterns/NNS
./.
====================
Retrieval/NN
performance/NN
w.r.t/NN
./.
====================
change/NN
of/IN
minimum/JJ
support/VBP
(/(
Homo/NN
sapiens/NNS
GRCh37.64/NN
DNA/NN
Chromosome/NN
Part/NN
1/CD
)/)
./.
====================
MCFS/NN
,/,
Maximal/JJ
Contiguous/JJ
Frequent/JJ
Suffix/NN
tree/CD
algorithm/NN
./.
====================
Retrieval/NN
performance/NN
w.r.t/NN
./.
====================
change/NN
of/IN
minimum/JJ
support/VBP
(/(
bacteria/NNS
genome/NN
dataset/NN
)/)
./.
====================
MCFS/NN
,/,
Maximal/JJ
Contiguous/JJ
Frequent/JJ
Suffix/NN
tree/CD
algorithm/NN
./.
====================
Memory/JJ
usage/NN
w.r.t/NN
./.
====================
change/NN
of/IN
minimum/JJ
support/VBP
(/(
Homo/NN
sapiens/NNS
GRCh37.64/NN
DNA/NN
Chromosome/NN
Part/NN
1/CD
)/)
./.
====================
MCFS/NN
,/,
Maximal/JJ
Contiguous/JJ
Frequent/JJ
Suffix/NN
tree/CD
algorithm/NN
./.
====================
Memory/JJ
usage/NN
w.r.t/NN
./.
====================
change/NN
of/IN
minimum/JJ
support/VBP
(/(
bacteria/NNS
genome/NN
sequence/NN
)/)
./.
====================
MCFS/NN
,/,
Maximal/JJ
Contiguous/JJ
Frequent/JJ
Suffix/NN
tree/CD
algorithm/NN
./.
====================
Performance/NN
of/IN
MCFS/NN
algorithm/NN
w.r.t/NN
./.
====================
increasing/VBG
minimum/JJ
support/VBP
in/IN
partitioning/VBG
approach/NN
(/(
on/IN
Homo/NN
sapiens/NNS
GRCh37.64/NN
DNA/NN
Chromosome/NN
Part/NN
1/CD
,/,
2/CD
,/,
3/CD
)/)
./.
====================
MCFS/NN
,/,
Maximal/JJ
Contiguous/JJ
Frequent/JJ
Suffix/NN
tree/CD
algorithm/NN
./.
====================
A/DT
DNA/NN
sequence/NN
database/NN
====================
Minimized/VBN
physical/JJ
projected/VBN
databases/NNS
(/(
DBs/NNS
)/)
====================
Contents/NNS
of/IN
the/DT
frequent/JJ
file/JJ
====================
Contents/NNS
of/IN
the/DT
output/NN
file/JJ
====================
