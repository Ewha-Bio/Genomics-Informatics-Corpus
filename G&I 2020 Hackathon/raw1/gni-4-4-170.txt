ESTin: A Program for Building a dbEST Submission File from Massive EST Sequences ESTin is an easy-to-use tool that allows EST researchers to build a dbEST submission file with EST sequences and related data. 

The advantages of ESTin are its user-friendly interface, various editing functions, and rigorous validation function.

Expressed sequence tag (EST) is generated by single-pass 5’ or 3’ DNA sequencing of clones randomly picked from cDNA libraries (Adams et al., 1991). 

It represents a partial description of the transcribed portions of genomes, and thus can provide insight into transcribed genes in a variety of organisms (Boguski, 1995). 

Most EST sequences are deposited into dbEST, a central public EST repository, in order to obtain the deposition numbersfor publication and supply them to the bio-community (Boguski et al., 1993). 

dbEST is the largest division of GenBank. 

Currently, it contains 38,933,423 entries that account for sixty-two percent of the entire GenBank entries (Benson et al., 2006).

To submit EST sequences to dbEST, they should be converted into EST submission files, according to the dbEST format ( http://www.ncbi.nlm.nih.gov/dbEST/how_ to_submit.html), which can be sent to dbEST via email. 

There are four types of dbEST format: contact, library, publication, and EST. 

Each type has its own fields consisting of a capitalized field tag, followed by data. 

It is easy to make the contact, library, and publication files. 

However, it is a difficult job to build an EST file, becausemost EST projects produce large numbers of EST sequences. 

Although it is possible to prepare them with manual editing, this is a tedious task and can cause errors in the submission file. 

Therefore, in most cases, using programs is necessary for preparing EST submission files. 

Although several programs have been developed for preparing EST submission files, most of them are integrated in large packages for EST processing and annotation such as ESTAP (Mao etal., 2003), ESTWeb (Paquola et al., 2003), and PartiGene (Parkinson et al., 2004). 

Accordingly, to use this function, these packages and all the pre-required programs should be installed on the user’s computer, which is an unnecessary job except for a package user. 

Moreover, most of these programs are capable of building EST submission files only with the EST sequences from their own package’s output. 

The author has developed ESTin, a program for building EST submission files to dbEST. 

The advantages of ESTin are its user-friendly interface, various editing functions, and a rigorous validating function.

ESTin was written in Microsoft Visual C++ 6.0 and runs on PC-compatible computers under the Microsoft Windows operating system. 

Its interface consists of a main window and several input dialogs. 

The user can input contact, library, publication, and EST data by clicking on the corresponding buttons in the main window. 

Figure 1 shows the main window and several input dialogs.

In preparing an EST submission file, the most significant aspect is the EST sequences. 

ESTin accepts FASTA-formatted EST sequences from external files and treats the first word in the description line of an EST sequence as the EST name.

Most ESTs have features that are included in the submission files. 

Some features are common to all ESTs, such as the Library name, whereas the others are unique to each EST such as row and column numbers. 

Users can assign common features to all ESTs or to a part of them during the importing step. 

To assign the unique features to ESTs, these features need to be converted to a tag=data form and added them to the corresponding EST description line with a bar-separated format. 

For example, if an EST has four unique features: ‘EST000T for name, ‘HHC189’ for clone, *M13 forward’ for primer, and ‘640’ for insert length, its description line will be the following: >EST001 |CLONE=HHC189|SEQ__ PRIMER= M13 forward|INSERT=640|. 

These descriptions are automatically parsed and assigned into each EST fields when imported. 

ESTin also has a function to allow users to edit each EST feature as well as its sequences. 

After importing, ESTin checks whether the EST ID is unique and the sequence bases are legal.

ESTin shows useful information for EST sequences such as EST statistics and the same EST sequences. 

The statistics present mean, standard deviation, and length distribution of all the EST sequences. 

From the statistics information, the user can detect whether non-EST sequences were included, for example, host genome sequences and vector sequences that are generally much longer than EST sequences. 

The EST name information that havethe same sequences will help users identify multiple importing of the same ESTs with different names.

ESTin has a validation function to check whether the inputdata is correct against the dbEST format. 

The main checking points are field format, obligatory fields, and EST references to contact, library, and publication. 

If an error is detected, the user cannot build a submission file. 

Some ESTin functions facilitate building a submission file. 

Users can preview the input data as the dbEST format and search an EST during the editing process. 

ESTin can read a dbEST submission file, which may be used for validating a submission file created by other programs before submitting it to dbEST.

ESTin is an easy-to-use tool that allows EST researchers to build submission files with EST sequences and their related data. 

ESTin’s user-friend editing and validating functionswill be useful to EST submitters and eventually lead to raising the accuracy of dbEST. 

The ESTin source code is available to academic users upon request.
