IdMapper: A Java Application for ID Mapping across Multiple Cross-referencing Providers.

We developed an identifier mapping application for bioinformatics research in Java programming language.

It is easy to use and provides many usability functionalities that are expected as essentials for a professional application.

It supports three widely used mapping services and can convert many ids from one source database into many target databases at once.

Id mapping across service providers is possible by remapping the resultant ids.

Because it adheres to the NetBeans platform architecture, it can be incorporated into other NetBeans platform applications as an id mapping provider without adaption or modification.

“-omics” style experiments, such as sequencing, microarray, and proteomics, generate enormous amounts of data (Kim et al., 2006, Kim et al., 2008).

To integrate and analyze the data in various respects, multiple tools are used.

Each tool supports its own set of identifiers for genes or gene products.

Even though there are widely used identifiers, such as Ensembl (Flicek et al., 2008), NCBI RefSeq (Pruitt et al., 2007), UniProt (The Uniprot Consortium, 2008) and HGNC (Povey et al., 2001), there is no universal identifier.

When multiple tools and services are used, identifier conversion problems across multiple databases arise frequently.

A small research group can not afford its own mapping service and relies on external services.

There exist efforts to reconcile identifiers across multiple source databases, such as the David gene ID conversion tool (Huang et al., 2008), MatchMiner (Bussey et al., 2003), IDconverter (Alibes et al., 2007), Onto translate (Khatri et al., 2006), PICR (Cote et al., 2007), Synergizer (Brriz et al., 2008), and Biomart (Smedley et al., 2009).

Services that are provided in the form of a web page can not be incorporated into other applications easily.

Only a few services provide API access for batch mapping or incorporation into other applications.

The Protein Identifier CrossReference (PICR) service is a web application that provides interactive and programmatic (SOAP and REST) access to a mapping algorithm that uses the UniProt Archive (UniParc) as a data warehouse to offer protein crossreferences.

The Synergizer is a service for translating between sets of biological identifiers.

It can, for example, translate Ensembl Gene IDs to Entrez Gene IDs, or IPI IDs to HGNC gene symbols, and much more.

The Synergizer works via a web interface (for users who are not programmers) or through a web service (for programmatic access).

BioMart is a queryoriented data management system, developed jointly by the Ontario Institute for Cancer Research (OICR) and the European Bioinformatics Institute (EBI).

It can be accessed via web services and can be adapted for identifier mapping.

BridgeDb, though not released publically yet, is another attempt at an id mapping framework for bioinformatics applications.

BridgeDb lets one add the following capabilities quickly and easily: translate identifiers from one system to another, search references by id or symbol, and link out to online information for an identifier.

Applications, such as the PathVisio pathway analysis tool, WikiPathways, CyThesaurus Cytoscape plugin, and the NetworkMerge Cytoscape plugin, are utilizing functionalities provided by BridgeDB.

Instead of developing the system from scratch, we assembled the application by reusing available services, frameworks, and libraries as much as possible.

For ID mapping itself, we used ID mapping services provided by other research groups that allowes programmatic access.

We picked the service provided by PICR, Synergizer, and Biomart, as they are recently developed and/or well maintained.

Currently, the BridgeDb library implements an ID mapping service for them, and we used BridgeDb’s API for the access of id mapping   services.

Three mapping services were incorporated into one application, and relevant metadata and mapping results are fetched from each service provider on the fly; no data are stored in the application.

We developed the application as a NetBeans Platform based standalone Java Web Start rich client application.

We selected the Java environment because the developed application can be utilized under most operating systems, such as Windows, Linux, and Mac OS, provided that the Java Runtime Environment is installed.

Java Web Start technology enables the standalone Java software applications to be deployed with a single click over the network.

Java Web Start ensures that the most current version of the application, as well as the correct version of the Java Runtime Environment (JRE), will be deployed.

Most desktop applications have similar features, such as menus, toolbars, status bars, progress visualization, data displays, customization settings, the saving and loading of user-specific data and configurations, splash screens, About boxes, internationalization, help systems, and so on.

For these and other typical client application features, a rich client platform, which is an application lifecycle environment and a basis for desktop applications, provides a framework with which the features can quickly and simply be put together.

A rich client platform also frees the developer from being concerned with tasks that have little to do with the application’s business logic.

Currently, the NetBeans Platform and Eclipse rich client platform are in wide use for Java based application development.

Recently, some bioinformaticsrelated applications, such as BioClipse, Quantitative Biology Tool, SpectraSuite, InstantJChem, and ChipInspector, have been developed using the rich client platform.

It is expected that utilization of the rich client platform for applications development will become popular.

We chose the NetBeans platform because there already exist many Swingbased bioinformatics applications.

We plan to develop a general purpose bioinformatics application framework, covering various areas by adapting and integrating these existing applications as needed.

We designed the application functionality and layout, developed the core mapping function, and glued those to the NetBeans platform.

The NetBeans platform provides quite a lot of libraries for applications development (Fig.

1), and we tried to utilize the functionalities as much as possible and minimize custom developments.

After the initial steep learning curve, we were able to develop a highquality, robust, and extensible application without much housekeeping code development effort.

By using the Swingx JXTable, the resulting mapping table can be customized further by column visibility control, row sorting, and column ordering.

The copy/ paste/save supports are provided for the resulting mapping table with userdefined column and row selection (Fig.

2).

The developed application is simple and easy yet powerful for ID conversion.

It supports three widely used mapping services and can convert many ids from one   source database into many target databases at once.

By copying the resulting mapped ids and mapping again against other cross-referencing providers, it is possible to map the ids further.

We plan to extend the source database to the other id mapping services that provide programmatic access, such as CRONOS (Waegele et al., 2009).

In that respect, we will use JAX-WS directly instead of the BridgeDb library, which currently supports only a limited number of mapping services.

The application is now a standalone Web Start application, but it can be converted into a NetBeans platform plug-in with simple re-packaging.

The converted plugin can be used as an ID mapping provider for other bioinformatics applications.

There are many bioinformatics Java GUI applications, but combining each application with another is next to impossible for most cases, because each application implements its own way of “plumbing.

” Programs that are developed as plugins for a rich client platform can be reused and work together seamlessly with other independently developed plugins.

This application can be used as an ID mapping provider plugin for other bioinformatics applications.

Applications development in this direction will facilitate the merging and integration of individual modules into a large bioinformatics applications framework that includes many areas.

